{"version":3,"sources":["app/api/store/storage/helpers.js","app/api/store/reducers/index.js","app/api/store/reducers/tasks.js","app/const/actionTypes.js","app/api/store/reducers/buffer.js","app/api/store/storage/index.js","app/routes/index.js","app/const/server_params.js","app/api/store/selectors/index.js","app/api/server/index.js","app/api/store/actions/creators.js","app/api/store/actions/dispatchers.js","app/blocks/containers/PageStart.js","app/blocks/components/PageStart.jsx","app/blocks/components/todo_list/SingleTask.jsx","app/blocks/containers/todo_list/SingleTask.js","app/blocks/components/todo_list/TasksList.jsx","app/blocks/containers/todo_list/TasksList.js","app/blocks/components/todo_list/ActionsBlock.jsx","app/blocks/containers/todo_list/ActionsBlock.js","app/blocks/components/todo_list/PageTodoList.jsx","app/routes/appRoutes.js","assets/themes/MainTheme.js","index.js","app/blocks/AppMain.js"],"names":["devTools","window","devToolsEnhancer","composeWithDevTools","name","realtime","hostname","port","history","createBrowserHistory","combineReducers","tasks","state","arguments","length","undefined","action","type","buffer","isPushing","Object","objectSpread","toConsumableArray","concat","taskAction","value","id","configureStore","initialState","middlewares","thunk","routerMiddleware","enhancers","applyMiddleware","apply","createStore","connectRouter","rootReducer","compose","routes","_ref","getUrls","react_default","a","createElement","Switch","map","route","index","Action","isExact","exact","assign","key","freeHostTrash","getTasks","store","getState","getBuffer","showError","funcName","message","console","log","getStartList","loop","isFirstRequest","data","FormData","append","JSON","stringify","time","Date","fetch","HOST","method","body","then","response","text","resAsText","replace","trim","clearRes","parse","e","catch","error","Array","isArray","initList","setTimeout","pushFromBufToServer","beginPushing","isSave","bufferClear","creators","dispatch","mapDispatchToProps","push","path","routerPush","connect","reactConnect","Button_default","className","onClick","SingleTask","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleUpdateStart","changeTotalUpdating","setState","isCurrentUpdating","scrollTop","handleKeyDown","keyCode","changingValue","handleUpdateSave","handleUpdateCancel","handleTextChange","target","_this$props","fieldAddTask","updatedField","focus","_this$props2","updateTask","_this$state","handleRemoveTask","_this$props3","deleteTask","handleDoneTask","_this$props4","doneTask","isDone","taskInfo","isScroll","isTotalUpdating","updatedFieldRef","createRef","nextProps","nextState","nextContext","prevProps","prevState","snapShot","current","forceUpdate","_this$state2","Fragment","style","backgroundColor","disabled","border","marginTop","ref","onChange","onKeyDown","test","Component","TaskList","getOrder","reduce","result","task","changeUpdatingState","changeScrollTop","changeUpdating","onDragEnd","destination","items","list","startIndex","endIndex","from","_result$splice","splice","removed","slicedToArray","reorder","source","order","newList","forEach","newProp","isNotPresent","listProp","_this2","document","getElementsByClassName","addEventListener","srcElement","needScrolling","scrollTo","scrollHeight","_this3","react_beautiful_dnd_esm","droppableId","isDropDisabled","provided","innerRef","overflowY","item","draggableId","draggableProps","cursor","todo_list_SingleTask","placeholder","List","ActionsBlock","addNewTaskHandle","addNewTask","taskValue","addFieldRef","isUpdating","getAddTaskInput","Actions","PageTodoList","inputAddTask","TasksList","todo_list_ActionsBlock","appRoutes","main","Route","component","Start","support","Redirect","to","createMuiTheme","typography","useNextVariants","app","es","lib","styles","theme","root","getElementById","render"],"mappings":"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","file":"static/js/main.7344a6fd.chunk.js","sourcesContent":["import { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { createBrowserHistory } from 'history';\r\n\r\n\r\nexport const devTools = window.devToolsEnhancer || composeWithDevTools({\r\n\t    name: 'AppMainWrapper.appRoutes appRoutes',\r\n\trealtime: true,\r\n\thostname: 'localhost',\r\n\t    port: 8000\r\n});\r\nexport const history = createBrowserHistory();","import { combineReducers } from 'redux';\r\nimport tasks from './tasks.js';\r\nimport buffer from './buffer.js';\r\n\r\n\r\nexport default combineReducers({ tasks, buffer });","import { INIT_LIST } from '$const/actionTypes';\r\n\r\n\r\nexport default (state = [], action = {}) => {\r\n\tswitch (action.type) {\r\n\t\tcase INIT_LIST: {\r\n\t\t\treturn action.tasks;\r\n\t\t}\r\n\r\n\t\tdefault: {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n};","export const INIT_LIST          = 'INIT_CURRENT_LIST';\r\nexport const SAVE_BUFFER_ADD    = 'SAVE_BUFFER_ADD';\r\nexport const SAVE_BUFFER_DELETE = 'SAVE_BUFFER_DELETE';\r\nexport const SAVE_BUFFER_UPDATE = 'SAVE_BUFFER_UPDATE';\r\nexport const SAVE_BUFFER_DONE   = 'SAVE_BUFFER_DONE';\r\nexport const CLEAR_BUFFER       = 'CLEAR_BUFFER';\r\nexport const BEGIN_PUSHING      = 'BEGIN_PUSHING';","import {\r\n\tSAVE_BUFFER_ADD,\r\n\tSAVE_BUFFER_DELETE,\r\n\tSAVE_BUFFER_UPDATE,\r\n\tSAVE_BUFFER_DONE,\r\n\r\n\tCLEAR_BUFFER,\r\n\tBEGIN_PUSHING\r\n} from '$const/actionTypes';\r\n\r\n\r\nexport default (\r\n\tstate = {\r\n\t\tisPushing: false,\r\n\t\t    tasks: []\r\n\t},\r\n\taction = {}\r\n) => {\r\n\tswitch (action.type) {\r\n\t\tcase SAVE_BUFFER_ADD: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttasks: [\r\n\t\t\t\t\t...state.tasks,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttaskAction: 'add_task',\r\n\t\t\t\t\t\t     value: action.value\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase SAVE_BUFFER_DELETE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttasks: [\r\n\t\t\t\t\t...state.tasks,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttaskAction: 'delete_task',\r\n\t\t\t\t\t\t\t\tid: action.id\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase SAVE_BUFFER_UPDATE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttasks: [\r\n\t\t\t\t\t...state.tasks,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttaskAction: 'update_task',\r\n\t\t\t\t\t\t\t\tid: action.id,\r\n\t\t\t\t\t\t\t value: action.value\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase SAVE_BUFFER_DONE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttasks: [\r\n\t\t\t\t\t...state.tasks,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttaskAction: 'done_task',\r\n\t\t\t\t\t\t\t\tid: action.id\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase BEGIN_PUSHING: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisPushing: true\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase CLEAR_BUFFER: {\r\n\t\t\treturn {\r\n\t\t\t\t\ttasks: [],\r\n\t\t\t\tisPushing: false\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tdefault: {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n};","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\r\nimport { devTools, history } from './helpers.js';\r\n\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '$store/reducers/index';\r\n\r\n\r\nconst configureStore = (initialState) => {\r\n\tconst middlewares = [\r\n\t\tthunk,\r\n\t\trouterMiddleware(history)\r\n\t];\r\n\tconst enhancers = [\r\n\t\tapplyMiddleware(...middlewares),\r\n\t\tdevTools()\r\n\t];\r\n\r\n\treturn createStore(\r\n\t\tconnectRouter(history)(rootReducer),\r\n\t\tinitialState,\r\n\t\tcompose(...enhancers)\r\n\t);\r\n};\r\n\r\n\r\nexport default configureStore({});","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\n\r\n\r\nconst getActions = urls => {\r\n\treturn urls.map(\r\n\t\t(route, index) => {\r\n\t\t\tconst Action = route.action;\r\n\t\t\tconst isExact = route.exact;\r\n\r\n\t\t\tdelete route.action;\r\n\t\t\tdelete route.exact;\r\n\r\n\t\t\treturn (\r\n\t\t\t\tisExact\r\n\t\t\t\t\t? <Action key={index} {...route} exact />\r\n\t\t\t\t\t: <Action key={index} {...route} />\r\n\t\t\t);\r\n\t\t}\r\n\t);\r\n};\r\n\r\nexport default ({ getUrls }) => (\r\n\t<Switch>\r\n\t\t{ getActions(getUrls()) }\r\n\t</Switch>\r\n);","const protocol = 'http://';\r\n//const domain   = 'localhost';\r\nconst domain   = 'kspase-mailer.zzz.com.ua';\r\nconst path     = '/test-server/';\r\n\r\n\r\nexport const HOST = protocol + domain + path;\r\n//export const freeHostTrash = '';\r\n\r\nexport const freeHostTrash =\r\n\t'<!-- zzz <!--]-->\\n' +\r\n\t'<div style=\"text-align:center;font-size:11px\" class=\"cbalink\"><a href=\"https://www.zzz.com.ua/\" title=\"&#1073;&#1077;&#1089;&#1087;&#1083;&#1072;&#1090;&#1085;&#1099;&#1081; &#1093;&#1086;&#1089;&#1090;&#1080;&#1085;&#1075;\">&#1073;&#1077;&#1089;&#1087;&#1083;&#1072;&#1090;&#1085;&#1099;&#1081; &#1093;&#1086;&#1089;&#1090;&#1080;&#1085;&#1075;</a> ZZZ.COM.UA<br/><br/></div>\\n' +\r\n\t'<script type=\"text/javascript\" src=\"//a5.zzz.com.ua/r1.js\"></script>\\n' +\r\n\t'<div class=\"cumf_bt_form_wrapper\" style=\"display:none\">\\n' +\r\n\t'<form id=\"contact_us_mail_feedback\" action=\"/oldTi9QvqM6ytokU9Q8ylQq\" method=\"post\">\\n' +\r\n\t'    <fieldset>\\n' +\r\n\t'        <!-- Form Name -->\\n' +\r\n\t'        <legend>Contact Us</legend>\\n' +\r\n\t'        <!-- Text input-->\\n' +\r\n\t'        <div class=\"cumf_bt_form-group\">\\n' +\r\n\t'            <label class=\"col-md-4 cumf_bt_control-label\" for=\"cumf_bt_name\">name</label>\\n' +\r\n\t'            <div class=\"col-md-4\">\\n' +\r\n\t'                <input id=\"cumf_bt_name\" name=\"cumf_bt_name\" type=\"text\" placeholder=\"your name\" class=\"cumf_bt_form-control cumf_bt_input-md\" required />\\n' +\r\n\t'                <span class=\"cumf_bt_help-block\">Please enter your name</span>\\n' +\r\n\t'            </div>\\n' +\r\n\t'        </div>\\n' +\r\n\t'        <!-- Text input-->\\n' +\r\n\t'        <div class=\"cumf_bt_form-group\">\\n' +\r\n\t'            <label class=\"col-md-4 cumf_bt_control-label\" for=\"cumf_bt_email\">your email</label>\\n' +\r\n\t'            <div class=\"col-md-4\">\\n' +\r\n\t'                <input id=\"cumf_bt_email\" name=\"cumf_bt_email\" type=\"text\" placeholder=\"enter your email\" class=\"cumf_bt_form-control cumf_bt_input-md\" required />\\n' +\r\n\t'                <span class=\"cumf_bt_help-block\">please enter your email</span>\\n' +\r\n\t'            </div>\\n' +\r\n\t'        </div>\\n' +\r\n\t'        <!-- Textarea -->\\n' +\r\n\t'        <div class=\"cumf_bt_form-group\">\\n' +\r\n\t'            <label class=\"col-md-4 cumf_bt_control-label\" for=\"cumf_bt_message\">your message</label>\\n' +\r\n\t'            <div class=\"col-md-4\">\\n' +\r\n\t'                <textarea class=\"cumf_bt_form-control\" id=\"cumf_bt_message\" name=\"cumf_bt_message\">Message goes here</textarea>\\n' +\r\n\t'            </div>\\n' +\r\n\t'        </div>\\n' +\r\n\t'        <input type=\"submit\" id=\"cumf_bt_submit\" value=\"Send\"/>\\n' +\r\n\t'    </fieldset>\\n' +\r\n\t'</form>\\n' +\r\n\t'</div>\\n' +\r\n\t'\\n' +\r\n\t'</body><!-->'\r\n;","import store from '$store/storage';\r\n\r\nexport const getTasks  = () => store.getState().tasks;\r\nexport const getBuffer = () => store.getState().buffer;","import { HOST, freeHostTrash } from '$const/server_params';\r\nimport { getTasks, getBuffer } from '$store/selectors/index';\r\nimport { initList, beginPushing, bufferClear } from '$store/actions/dispatchers';\r\n\r\n\r\nconst showError = (funcName, message) => {\r\n\tconsole.log(`--------------------`);\r\n\tconsole.log(`module: «api - server - index.js»`);\r\n\tconsole.log(`error func: «${funcName}»`);\r\n\tconsole.log(`error message: ${message}`);\r\n\tconsole.log(`--------------------`);\r\n};\r\n\r\nexport const getStartList = () => {\r\n\tconst loop = isFirstRequest => {\r\n\t\tconst data = new FormData();\r\n\t\tdata.append(\r\n\t\t\t'data',\r\n\t\t\tJSON.stringify({\r\n\t\t\t\tisFirstRequest,\r\n\t\t\t\ttime: +new Date()\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tconst url = HOST + 'server_getter.php';\r\n\t\tconst params = {\r\n\t\t\tmethod: 'POST',\r\n\t\t\t  body: data\r\n\t\t};\r\n\r\n\t\treturn (\r\n\t\t\tfetch(url, params)\r\n\t\t\t\t.then(\r\n\t\t\t\t\tresponse => response.text()\r\n\t\t\t\t)\r\n\t\t\t\t.then(\r\n\t\t\t\t\tresAsText => resAsText.replace(freeHostTrash, '').trim()\r\n\t\t\t\t)\r\n\t\t\t\t.then(\r\n\t\t\t\t\tclearRes => {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\treturn JSON.parse(clearRes);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcatch (e) {\r\n\t\t\t\t\t\t\tshowError('getUpdatedList', clearRes);\r\n\t\t\t\t\t\t\treturn getTasks();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t\t.catch(\r\n\t\t\t\t\terror => {\r\n\t\t\t\t\t\tshowError('getStartList', `problem connect to server, serverAnswer: ${error.message}`);\r\n\t\t\t\t\t\treturn getTasks();\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t\t.then(\r\n\t\t\t\t\ttasks => {\r\n\t\t\t\t\t\tif (Array.isArray(tasks)) {\r\n\t\t\t\t\t\t\tinitList(tasks);\r\n\t\t\t\t\t\t}\r\n//\t\t\t\t\t\telse {\r\n//\t\t\t\t\t\t\tconsole.log( tasks );\r\n//\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tsetTimeout(\r\n\t\t\t\t\t\t\t() => {\r\n\t\t\t\t\t\t\t\tloop(false);\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t500\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t)\r\n\t};\r\n\r\n\tloop(true);\r\n};\r\n\r\nexport const pushFromBufToServer = () => {\r\n\tconst loop = () => {\r\n\t\tconst buffer = getBuffer();\r\n\r\n\t\tconst data = new FormData();\r\n\t\tdata.append(\r\n\t\t\t'data',\r\n\t\t\tJSON.stringify(buffer.tasks)\r\n\t\t);\r\n\r\n\t\tconst url = HOST + 'server_setter.php';\r\n\t\tconst params = {\r\n\t\t\tmethod: 'POST',\r\n\t\t\t  body: data\r\n\t\t};\r\n\r\n\t\tfetch(url, params)\r\n\t\t\t.then(\r\n\t\t\t\tresponse => response.text()\r\n\t\t\t)\r\n\t\t\t.then(\r\n\t\t\t\tresAsText => resAsText.replace(freeHostTrash, '').trim()\r\n\t\t\t)\r\n\t\t\t.then(\r\n\t\t\t\tclearRes => {\r\n\t\t\t\t\tif (clearRes === 'Success') {\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tshowError('saveOnServer', `action: ${buffer.tasks.action}, serverAnswer: ${clearRes}`);\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\t.catch(\r\n\t\t\t\terror => {\r\n\t\t\t\t\tshowError('saveOnServer', `problem connect to server, serverAnswer: ${error.message}`);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\t.then(\r\n\t\t\t\tisSave => {\r\n\t\t\t\t\tif (isSave) {\r\n\t\t\t\t\t\tbufferClear();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tsetTimeout(\r\n\t\t\t\t\t\t\tloop(),\r\n\t\t\t\t\t\t\t500\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t};\r\n\r\n\tif (!getBuffer().isPushing) {\r\n\t\tbeginPushing();\r\n\t\tloop();\r\n\t}\r\n};","import {\r\n\tINIT_LIST,\r\n\tSAVE_BUFFER_ADD,\r\n\tSAVE_BUFFER_DELETE,\r\n\tSAVE_BUFFER_UPDATE,\r\n\tSAVE_BUFFER_DONE,\r\n\r\n\tBEGIN_PUSHING,\r\n\tCLEAR_BUFFER\r\n} from '$const/actionTypes';\r\n\r\n\r\nexport default {\r\n\tinitList: tasks => ({\r\n\t\ttype: INIT_LIST,\r\n\t\ttasks\r\n\t}),\r\n\tbeginPushing: () => ({\r\n\t\ttype: BEGIN_PUSHING\r\n\t}),\r\n\tbufferClear: () => {\r\n\t\treturn {\r\n\t\t\ttype: CLEAR_BUFFER\r\n\t\t}\r\n\t},\r\n\r\n\tsaveBufferAdd: value => ({\r\n\t\ttype: SAVE_BUFFER_ADD,\r\n\t\tvalue\r\n\t}),\r\n\tsaveBufferDelete: id => ({\r\n\t\ttype: SAVE_BUFFER_DELETE,\r\n\t\tid\r\n\t}),\r\n\tsaveBufferUpdate: (id, value) => ({\r\n\t\ttype: SAVE_BUFFER_UPDATE,\r\n\t\tid,\r\n\t\tvalue\r\n\t}),\r\n\tsaveBufferDone: id => ({\r\n\t\ttype: SAVE_BUFFER_DONE,\r\n\t\tid\r\n\t})\r\n};","import { push as routerPush } from 'connected-react-router';\r\nimport { pushFromBufToServer } from '$server/index';\r\nimport store from '$store/storage';\r\nimport creators from './creators';\r\n\r\n\r\nexport const initList = tasks => {\r\n\tstore.dispatch(creators.initList(tasks));\r\n};\r\nexport const beginPushing = () => {\r\n\tstore.dispatch(creators.beginPushing());\r\n};\r\nexport const bufferClear = () => {\r\n\tstore.dispatch(creators.bufferClear());\r\n};\r\n\r\nexport const addNewTask = value => dispatch => {\r\n\tdispatch(creators.saveBufferAdd(value));\r\n\tpushFromBufToServer();\r\n};\r\nexport const deleteTask = id => dispatch => {\r\n\tdispatch(creators.saveBufferDelete(id));\r\n\tpushFromBufToServer();\r\n};\r\nexport const updateTask = (id, value) => dispatch => {\r\n\tdispatch(creators.saveBufferUpdate(id, value));\r\n\tpushFromBufToServer();\r\n};\r\nexport const doneTask = id => dispatch => {\r\n\tdispatch(creators.saveBufferDone(id));\r\n\tpushFromBufToServer();\r\n};\r\n\r\nexport const push = path => dispatch => {\r\n\tdispatch(routerPush(path));\r\n};","import { connect as reactConnect } from 'react-redux';\r\nimport { push } from '$store/actions/dispatchers';\r\nimport Start from '$comp/PageStart';\r\n\r\n\r\nconst mapStateToProps = () => ({});\r\nconst mapDispatchToProps = {push};\r\nconst connect = reactConnect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default connect(Start);","import React from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport '$assets/styles/PageStart.css';\r\n\r\n\r\nexport default ({ push }) => {\r\n\tconst handleClick = () => {\r\n\t\tpush('/list');\r\n\t};\r\n\r\n\treturn <Button\tclassName=\"btnShow\" onClick={handleClick}>Show list</Button>;\r\n}","import React, { Component, createRef } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport '$assets/styles/SingleTask.css';\r\n\r\n\r\nexport default class SingleTask extends Component {\r\n\thandleUpdateStart = () => {\r\n\t\tconst { changeTotalUpdating } = this.props;\r\n\r\n\t\tthis.setState({\r\n\t\t\tisCurrentUpdating: true\r\n\t\t});\r\n\r\n\t\tchangeTotalUpdating(\r\n\t\t\ttrue,\r\n\t\t\tscrollTop => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tscrollTop: scrollTop\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\thandleKeyDown = e => {\r\n\t\tif (e.keyCode === 13) {\r\n\t\t\tif (this.state.changingValue.trim()) {\r\n\t\t\t\tthis.handleUpdateSave();\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (e.keyCode === 27) {\r\n\t\t\tthis.handleUpdateCancel();\r\n\t\t}\r\n\t};\r\n\thandleTextChange = e => {\r\n\t\tthis.setState({\r\n\t\t\tchangingValue: e.target.value\r\n\t\t});\r\n\t};\r\n\thandleUpdateCancel = () => {\r\n\t\tconst { fieldAddTask, changeTotalUpdating } = this.props;\r\n\t\tconst { value } = this.state;\r\n\r\n\t\tthis.setState({\r\n\t\t\tisCurrentUpdating: false,\r\n\t\t\t    changingValue: value\r\n\t\t});\r\n\t\tthis.updatedField = null;\r\n\t\tfieldAddTask.focus();\r\n\r\n\t\tchangeTotalUpdating(false, () => {});\r\n\t};\r\n\thandleUpdateSave = () => {\r\n\t\tconst { fieldAddTask, changeTotalUpdating, updateTask } = this.props;\r\n\t\tconst { id, changingValue } = this.state;\r\n\r\n\t\tthis.setState({\r\n\t\t\tisCurrentUpdating: false,\r\n\t\t\t            value: changingValue\r\n\t\t});\r\n\t\tthis.updatedField = null;\r\n\t\tfieldAddTask.focus();\r\n\r\n\t\tchangeTotalUpdating(false, () => {});\r\n\t\tupdateTask(id, changingValue);\r\n\t};\r\n\r\n\thandleRemoveTask = () => {\r\n\t\tconst { fieldAddTask, deleteTask } = this.props;\r\n\t\tconst { id } = this.state;\r\n\t\tfieldAddTask.focus();\r\n\r\n\t\tdeleteTask(id);\r\n\t};\r\n\thandleDoneTask = () => {\r\n\t\tconst { fieldAddTask, doneTask } = this.props;\r\n\t\tconst { id } = this.state;\r\n\r\n\t\tthis.setState({\r\n\t\t\tisDone: true\r\n\t\t});\r\n\t\tfieldAddTask.focus();\r\n\r\n\t\tdoneTask(id);\r\n\t};\r\n\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tconst { taskInfo, scrollTop, isScroll } = props;\r\n\r\n\t\tthis.state = {\r\n\t\t\tscrollTop,\r\n\t\t\tisScroll,\r\n\t\t\tisCurrentUpdating: false,\r\n\t\t\t  isTotalUpdating: false,\r\n\t\t\t\tchangingValue: taskInfo.value,\r\n\r\n\t\t\t\t\t\t   id: taskInfo.id,\r\n\t\t\t\t\t\tvalue: taskInfo.value,\r\n\t\t\t\t\t   isDone: taskInfo.isDone\r\n\t\t};\r\n\r\n\t\tthis.updatedFieldRef = createRef();\r\n\t\t   this.updatedField = null;\r\n\t}\r\n\r\n\tshouldComponentUpdate(nextProps, nextState, nextContext) {\r\n\t\tif (nextProps['taskInfo'].value !== this.props['taskInfo'].value) {\r\n\t\t\tthis.setState({\r\n\t\t\t\t        value: nextProps['taskInfo'].value,\r\n\t\t\t\tchangingValue: nextProps['taskInfo'].value\r\n\t\t\t});\r\n\t\t}\r\n\t\tif (nextProps['taskInfo'].isDone !== this.props['taskInfo'].isDone) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tisDone: nextProps['taskInfo'].isDone\r\n\t\t\t});\r\n\t\t}\r\n\t\tif (nextProps.isTotalUpdating !== this.props.isTotalUpdating) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tisTotalUpdating: nextProps.isTotalUpdating\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\r\n\tcomponentDidUpdate(prevProps, prevState, snapShot) {\r\n\t\tif (this.updatedField) {\r\n\t\t\tif (this.state.isCurrentUpdating) {\r\n\t\t\t\tthis.updatedField.focus();\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this.updatedFieldRef.current) {\r\n\t\t\t\tthis.updatedField = this.updatedFieldRef.current;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (prevProps.isScroll !== this.props.isScroll) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tisScroll: this.props.isScroll\r\n\t\t\t});\r\n\t\t\tthis.forceUpdate();\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tisDone,\r\n\t\t\tvalue,\r\n\t\t\tchangingValue,\r\n\t\t\tisCurrentUpdating,\r\n\t\t\tisTotalUpdating,\r\n\t\t\tscrollTop,\r\n\t\t\tisScroll\r\n\t\t} = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t{\r\n\t\t\t\tisDone\r\n\t\t\t\t\t? (\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName=\"singleTask\"\r\n\t\t\t\t\t\t\tstyle={{ backgroundColor: '#3b9' }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<div className=\"taskValue\">{value}</div>\r\n\t\t\t\t\t\t\t<div className={\r\n\t\t\t\t\t\t\t\t`controls ${(isTotalUpdating || !isScroll ) ? 'isUpdating' : 'notUpdating'}`\r\n\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tclassName=\"btn btnRemoveDone\"\r\n\t\t\t\t\t\t\t\t\tonClick={this.handleRemoveTask}\r\n\t\t\t\t\t\t\t\t\tdisabled={isTotalUpdating}\r\n\t\t\t\t\t\t\t\t>Remove</Button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t\t: (\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName=\"singleTask\"\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tbackgroundColor: isCurrentUpdating ? '#b9daff' : '#ccc'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tisCurrentUpdating\r\n\t\t\t\t\t\t\t\t? (\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"inputWrapper\"\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tborder: isCurrentUpdating ? '2px solid #55c' : 'none'\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"updateTaskField\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ marginTop: `${6 - scrollTop}px` }}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={changingValue}\r\n\t\t\t\t\t\t\t\t\t\t\t\tref={this.updatedFieldRef}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleTextChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonKeyDown={this.handleKeyDown}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.test}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className={\r\n\t\t\t\t\t\t\t\t\t\t\t`controls ${(isTotalUpdating || !isScroll ) ? 'isUpdating' : 'notUpdating'}`\r\n\t\t\t\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btnBig btnUpdateSave\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.handleUpdateSave}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={!changingValue.trim()}\r\n\t\t\t\t\t\t\t\t\t\t\t>Save</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btnBig btnUpdateCancel\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.handleUpdateCancel}\r\n\t\t\t\t\t\t\t\t\t\t\t>Cancel</Button>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t: (\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"taskValue\">{value}</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className={\r\n\t\t\t\t\t\t\t\t\t\t\t`controls ${(isTotalUpdating || !isScroll ) ? 'isUpdating' : 'notUpdating'}`\r\n\t\t\t\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btnSmall btnDone\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.handleDoneTask}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={isTotalUpdating}\r\n\t\t\t\t\t\t\t\t\t\t\t>Done</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btnSmall btnUpdateBegin\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.handleUpdateStart}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={isTotalUpdating}\r\n\t\t\t\t\t\t\t\t\t\t\t>Update</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btnSmall btnRemove\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.handleRemoveTask}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={isTotalUpdating}\r\n\t\t\t\t\t\t\t\t\t\t\t>Remove</Button>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t}\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}","import { connect as reactConnect } from 'react-redux';\r\nimport { deleteTask, doneTask, updateTask } from '$store/actions/dispatchers';\r\nimport SingleTask from '$comp/todo_list/SingleTask';\r\n\r\n\r\nconst mapStateToProps = () => ({});\r\nconst mapDispatchToProps = { deleteTask, doneTask, updateTask };\r\nconst connect = reactConnect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default connect(SingleTask);","import React, { Component } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\n\r\nimport SingleTask from '$cont/todo_list/SingleTask';\r\n\r\nimport '$assets/styles/TaskList.css';\r\n\r\n\r\nconst TASK_COUNT = 8;\r\n\r\nexport default class TaskList extends Component {\r\n\tgetOrder = tasks => tasks.reduce(\r\n\t\t(result, task) => {\r\n\t\t\tresult.push(task.id);\r\n\t\t\treturn result;\r\n\t\t},\r\n\t\t[]\r\n\t);\r\n\tchangeUpdatingState = (isTotalUpdating, changeScrollTop) => {\r\n\t\tthis.setState({\r\n\t\t\tisTotalUpdating\r\n\t\t});\r\n\t\tthis.props.changeUpdating(isTotalUpdating);\r\n\r\n\t\tif (isTotalUpdating) {\r\n\t\t\tchangeScrollTop(this.scrollTop);\r\n\t\t}\r\n\t};\r\n\tonDragEnd = result => {\r\n\t\tif (result.destination) {\r\n\t\t\tconst reorder = (list, startIndex, endIndex) => {\r\n\t\t\t\tconst result = Array.from(list);\r\n\t\t\t\tconst [removed] = result.splice(startIndex, 1);\r\n\t\t\t\tresult.splice(endIndex, 0, removed);\r\n\r\n\t\t\t\treturn result;\r\n\t\t\t};\r\n\t\t\tconst items = reorder(\r\n\t\t\t\tthis.state.items,\r\n\t\t\t\tresult.source.index,\r\n\t\t\t\tresult.destination.index\r\n\t\t\t);\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\titems,\r\n\t\t\t\torder: this.getOrder(items)\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tprops.getStartList();\r\n\r\n\t\tthis.state = {\r\n\t\t\t          items: [],\r\n\t\t\t\t\t  order: [],\r\n\t\t\t\t   isScroll: false,\r\n\t\t\tisTotalUpdating: false\r\n\t\t};\r\n\t\tthis.scrollTop = 0;\r\n\t}\r\n\r\n\tshouldComponentUpdate(nextProps, nextState, nextContext) {\r\n\t\tif (this.props.tasks !== nextProps.tasks ) {\r\n\t\t\tif (this.props.tasks.length === 0) {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\titems: nextProps.tasks,\r\n\t\t\t\t\torder: this.getOrder(nextProps.tasks)\r\n\t\t\t\t});\r\n\t\t\t\tif (nextProps.tasks.length > TASK_COUNT) {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tisScroll: true\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif (nextProps.tasks.length <= TASK_COUNT) {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tisScroll: false\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet newList = [];\r\n\r\n\t\t\t\tthis.state.order.forEach(\r\n\t\t\t\t\tid => {\r\n\t\t\t\t\t\tnextProps.tasks.forEach(\r\n\t\t\t\t\t\t\tnewProp => {\r\n\t\t\t\t\t\t\t\tif (newProp.id === id) {\r\n\t\t\t\t\t\t\t\t\tnewList.push(newProp)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t\tnextProps.tasks.forEach(\r\n\t\t\t\t\tnewProp => {\r\n\t\t\t\t\t\tlet isNotPresent = true;\r\n\r\n\t\t\t\t\t\tnewList.forEach(\r\n\t\t\t\t\t\t\tlistProp => {\r\n\t\t\t\t\t\t\t\tif (newProp.id === listProp.id) {\r\n\t\t\t\t\t\t\t\t\tisNotPresent = false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tif (isNotPresent) {\r\n\t\t\t\t\t\t\tnewList.push(newProp)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\titems: newList\r\n\t\t\t\t});\r\n\t\t\t\tif (!this.state.isScroll && newList.length > TASK_COUNT) {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tisScroll: true\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif (this.state.isScroll && newList.length <= TASK_COUNT) {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tisScroll: false\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps, prevState, snapShot) {\r\n\t\tconst list = document.body.getElementsByClassName('todoList')[0];\r\n\r\n\t\tif (list) {\r\n\t\t\tlist.addEventListener(\r\n\t\t\t\t'scroll',\r\n\t\t\t\te => {\r\n\t\t\t\t\tthis.scrollTop = e.srcElement.scrollTop;\r\n\t\t\t\t}\r\n\t\t\t);\r\n\r\n\t\t\tif (this.needScrolling) {\r\n\t\t\t\tthis.needScrolling = false;\r\n\t\t\t\tlist.scrollTo(0, list.scrollHeight);\r\n\t\t\t}\r\n\t\t\tif (\r\n\t\t\t\t(prevProps.tasks.length < this.props.tasks.length)\r\n\t\t\t\t&&\r\n\t\t\t\t(prevProps.tasks.length !== 0)\r\n\t\t\t) {\r\n\t\t\t\tthis.needScrolling = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { fieldAddTask } = this.props;\r\n\t\tconst { isTotalUpdating, items, isScroll } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<DragDropContext onDragEnd={this.onDragEnd}>\r\n\t\t\t\t<Droppable droppableId=\"droppable\" isDropDisabled={isTotalUpdating}>\r\n\t\t\t\t{\r\n\t\t\t\t\tprovided => (\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName=\"todoList\"\r\n\t\t\t\t\t\t\tref={provided.innerRef}\r\n\t\t\t\t\t\t\tstyle={{ overflowY: isTotalUpdating ? 'hidden' : 'auto' }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{items.map(\r\n\t\t\t\t\t\t\t\t(item, index) => (\r\n\t\t\t\t\t\t\t\t\t<Draggable\r\n\t\t\t\t\t\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\t\t\t\t\t\tdraggableId={item.id}\r\n\t\t\t\t\t\t\t\t\t\tindex={index}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tprovided => (\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"taskWrapper\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}\r\n\t\t\t\t\t\t\t\t\t\t\t\t{...provided['draggableProps']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t{...provided['dragHandleProps']}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t...provided.draggableProps.style,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcursor: isTotalUpdating ? 'default' : 'move',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<SingleTask\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttaskInfo={item}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisTotalUpdating={isTotalUpdating}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tchangeTotalUpdating={this.changeUpdatingState}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfieldAddTask={fieldAddTask}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisScroll={isScroll}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</Draggable>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t{ provided.placeholder }\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t\t</Droppable>\r\n\t\t\t</DragDropContext>\r\n\t\t);\r\n\t}\r\n}","import { connect as reactConnect } from 'react-redux';\r\nimport { getStartList } from '$server/index';\r\nimport { getTasks } from '$store/selectors/index';\r\nimport List from '$comp/todo_list/TasksList';\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n\ttasks: getTasks(state),\r\n\tgetStartList\r\n});\r\nconst mapDispatchToProps = {};\r\nconst connect = reactConnect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default connect(List);","import React, { Component, createRef } from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport '$assets/styles/ActionsBlock.css';\r\n\r\n\r\nexport default class ActionsBlock extends Component {\r\n\taddNewTaskHandle = () => {\r\n\t\tthis.props.addNewTask(this.state.taskValue);\r\n\t\tthis.addFieldRef.current.focus();\r\n\t\tthis.setState({\r\n\t\t\ttaskValue: ''\r\n\t\t});\r\n\t};\r\n\thandleTextChange = e => {\r\n\t\tthis.setState({\r\n\t\t\ttaskValue: e.target.value\r\n\t\t});\r\n\t};\r\n\thandleKeyDown = e => {\r\n\t\tif (e.keyCode === 13) {\r\n\t\t\tif (!this.state.isUpdating) {\r\n\t\t\t\tthis.addNewTaskHandle();\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\t taskValue: '',\r\n\t\t\tisUpdating: false\r\n\t\t};\r\n\t\tthis.addFieldRef = createRef();\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.props.getAddTaskInput(this.addFieldRef.current);\r\n\t\tthis.addFieldRef.current.focus();\r\n\t}\r\n\r\n\tshouldComponentUpdate(nextProps, nextState, nextContext) {\r\n\t\tif (nextProps.isUpdating !== this.props.isUpdating) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tisUpdating: nextProps.isUpdating\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { taskValue, isUpdating } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"actionsBlock\">\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName=\"addTaskField\"\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tvalue={taskValue}\r\n\t\t\t\t\tref={this.addFieldRef}\r\n\t\t\t\t\tonChange={this.handleTextChange}\r\n\t\t\t\t\tonKeyDown={this.handleKeyDown}\r\n\t\t\t\t/>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tclassName=\"btnAddNew\"\r\n\t\t\t\t\tonClick={this.addNewTaskHandle}\r\n\t\t\t\t\tdisabled={\r\n\t\t\t\t\t\t!taskValue.trim()\r\n\t\t\t\t\t\t||\r\n\t\t\t\t\t\tisUpdating\r\n\t\t\t\t\t}\r\n\t\t\t\t>Add task</Button>\r\n\t\t\t</div>\r\n\t\t)\r\n\t};\r\n}","import { connect as reactConnect } from 'react-redux';\r\nimport { addNewTask } from '$store/actions/dispatchers';\r\nimport Actions from '$comp/todo_list/ActionsBlock';\r\n\r\n\r\nconst mapStateToProps = () => ({});\r\nconst mapDispatchToProps = { addNewTask };\r\nconst connect = reactConnect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default connect(Actions);","import React, { Component } from 'react';\r\n\r\nimport TasksList from '$cont/todo_list/TasksList';\r\nimport ActionsBlock from '$cont/todo_list/ActionsBlock';\r\n\r\nimport '$assets/styles/PageList.css';\r\n\r\n\r\nexport default class PageTodoList extends Component {\r\n\tgetAddTaskInput = inputAddTask => {\r\n\t\tthis.setState({\r\n\t\t\tinputAddTask\r\n\t\t});\r\n\t};\r\n\tchangeUpdating = isUpdating => {\r\n\t\tthis.setState({\r\n\t\t\tisUpdating\r\n\t\t});\r\n\t};\r\n\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tinputAddTask: null,\r\n\t\t\t  isUpdating: false\r\n\t\t};\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { inputAddTask, isUpdating } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"pageTodoList\">\r\n\t\t\t\t<TasksList\r\n\t\t\t\t\tfieldAddTask={inputAddTask}\r\n\t\t\t\t\tchangeUpdating={this.changeUpdating}\r\n\t\t\t\t/>\r\n\t\t\t\t<ActionsBlock\r\n\t\t\t\t\tgetAddTaskInput={this.getAddTaskInput}\r\n\t\t\t\t\tisUpdating={isUpdating}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}","import { Route, Redirect } from 'react-router-dom';\r\n\r\nimport Start from '$cont/PageStart';\r\nimport List from '$comp/todo_list/PageTodoList';\r\n\r\n\r\nconst appRoutes = () => {\r\n\tconst main = [\r\n\t\t{\r\n\t\t\t   action: Route,\r\n\t\t\t     path: '/',\r\n\t\t\tcomponent: Start,\r\n\t\t\t    exact: true\r\n\t\t},\r\n\t\t{\r\n\t\t\t   action: Route,\r\n\t\t\t     path: '/list',\r\n\t\t\tcomponent: List,\r\n\t\t\t    exact: true\r\n\t\t}\r\n\t];\r\n\tconst support = [\r\n\t\t{\r\n\t\t\taction: Redirect,\r\n\t\t\t  from: '/*',\r\n\t\t\t    to: '/',\r\n\t\t\t exact: false\r\n\t\t}\r\n\t];\r\n\r\n\treturn main.concat(support);\r\n};\r\n\r\n\r\nexport default appRoutes;","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n\r\nexport default createMuiTheme({\r\n\ttypography: {\r\n\t\tuseNextVariants: true,\r\n\t}\r\n});","import React from 'react';\nimport { render } from 'react-dom';\nimport App from './app/blocks/AppMain.js';\nimport '$assets/styles/index.css';\n\n\nconst app = <App />;\nconst root = document.getElementById('root');\n\nrender(app, root);","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { ConnectedRouter } from 'connected-react-router';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\nimport { history } from '$store/storage/helpers';\r\nimport store from '$store/storage/index';\r\nimport Routes from '$routes/index';\r\nimport appRoutes from '$routes/appRoutes';\r\nimport theme from '$assets/themes/MainTheme';\r\n\r\n\r\nexport default () => (\r\n\t<Provider store={store}>\r\n\t\t<ConnectedRouter history={history}>\r\n\t\t\t<MuiThemeProvider theme={theme}>\r\n\t\t\t\t<Routes getUrls={appRoutes} />\r\n\t\t\t</MuiThemeProvider>\r\n\t\t</ConnectedRouter>\r\n\t</Provider>\r\n);"],"sourceRoot":""}