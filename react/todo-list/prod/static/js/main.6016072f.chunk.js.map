{"version":3,"sources":["app/api/store/storage/helpers.js","app/api/store/reducers/index.js","app/api/store/reducers/tasks.js","app/const/actionTypes.js","app/api/store/storage/index.js","app/routes/index.js","app/const/server_params.js","app/api/server/index.js","app/api/store/actions/creators.js","app/blocks/containers/PageStart.js","app/api/store/actions/dispatchers.js","app/blocks/components/PageStart.jsx","app/blocks/components/todo_list/SingleTask.jsx","app/blocks/containers/todo_list/SingleTask.js","app/blocks/components/todo_list/TasksList.jsx","app/blocks/containers/todo_list/TasksList.js","app/api/store/selectors/index.js","app/blocks/components/todo_list/ActionsBlock.jsx","app/blocks/containers/todo_list/ActionsBlock.js","app/blocks/components/todo_list/PageTodoList.jsx","app/routes/appRoutes.js","assets/themes/MainTheme.js","index.js","app/blocks/AppMain.js"],"names":["devTools","window","devToolsEnhancer","composeWithDevTools","name","realtime","hostname","port","history","createBrowserHistory","combineReducers","tasks","state","arguments","length","undefined","action","type","configureStore","initialState","middlewares","thunk","routerMiddleware","enhancers","applyMiddleware","apply","createStore","connectRouter","rootReducer","compose","routes","_ref","getUrls","react_default","a","createElement","Switch","map","route","index","Action","isExact","exact","Object","assign","key","protocol","showError","funcName","message","console","log","concat","saveOnServer","obj","data","FormData","append","JSON","stringify","fetch","HOST","method","body","then","response","text","resAsText","updateTask","id","value","addNewTask","deleteTask","doneTask","creators","mapDispatchToProps","push","path","dispatch","routerPush","connect","reactConnect","Button_default","className","onClick","SingleTask","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleUpdateStart","changeTotalUpdating","setState","isCurrentUpdating","scrollTop","handleKeyDown","e","keyCode","changingValue","trim","handleUpdateSave","handleUpdateCancel","handleTextChange","target","_this$props","fieldAddTask","updatedField","focus","_this$props2","_this$state","handleRemoveTask","_this$props3","handleDoneTask","_this$props4","isDone","taskInfo","isScroll","isTotalUpdating","updatedFieldRef","createRef","nextProps","nextState","nextContext","prevProps","prevState","snapShot","current","forceUpdate","_this$state2","Fragment","style","backgroundColor","disabled","border","marginTop","ref","onChange","onKeyDown","test","Component","TaskList","getOrder","reduce","result","task","changeUpdatingState","changeScrollTop","changeUpdating","onDragEnd","destination","items","list","startIndex","endIndex","Array","from","_result$splice","splice","removed","slicedToArray","reorder","source","order","listInit","newList","forEach","newProp","isNotPresent","listProp","_this2","document","getElementsByClassName","addEventListener","srcElement","needScrolling","scrollTo","scrollHeight","_this3","react_beautiful_dnd_esm","droppableId","isDropDisabled","provided","innerRef","overflowY","item","draggableId","objectSpread","draggableProps","cursor","todo_list_SingleTask","placeholder","longPolling","Date","parse","getUpdatedList","isArray","setTimeout","getTasks","List","ActionsBlock","addNewTaskHandle","taskValue","addFieldRef","isUpdating","getAddTaskInput","Actions","PageTodoList","inputAddTask","TasksList","todo_list_ActionsBlock","appRoutes","main","Route","component","Start","support","Redirect","to","createMuiTheme","typography","useNextVariants","app","es","store","lib","styles","theme","root","getElementById","render"],"mappings":"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","file":"static/js/main.6016072f.chunk.js","sourcesContent":["import { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { createBrowserHistory } from 'history';\r\n\r\n\r\nexport const devTools = window.devToolsEnhancer || composeWithDevTools({\r\n\t    name: 'AppMainWrapper.appRoutes appRoutes',\r\n\trealtime: true,\r\n\thostname: 'localhost',\r\n\t    port: 8000\r\n});\r\nexport const history = createBrowserHistory();","import { combineReducers } from 'redux';\r\nimport tasks from './tasks.js';\r\n\r\n\r\nexport default combineReducers({ tasks });","import { INIT_CURRENT_LIST } from '$const/actionTypes';\r\n\r\n\r\nexport default (state = [], action = {}) => {\r\n\tswitch (action.type) {\r\n\t\tcase INIT_CURRENT_LIST: {\r\n\t\t\treturn action.tasks;\r\n\t\t}\r\n\r\n\t\tdefault: {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n};","export const INIT_CURRENT_LIST = 'INIT_CURRENT_LIST';","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\r\nimport { devTools, history } from './helpers.js';\r\n\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '$store/reducers/index';\r\n\r\n\r\nconst configureStore = (initialState) => {\r\n\tconst middlewares = [\r\n\t\tthunk,\r\n\t\trouterMiddleware(history)\r\n\t];\r\n\tconst enhancers = [\r\n\t\tapplyMiddleware(...middlewares),\r\n\t\tdevTools()\r\n\t];\r\n\r\n\treturn createStore(\r\n\t\tconnectRouter(history)(rootReducer),\r\n\t\tinitialState,\r\n\t\tcompose(...enhancers)\r\n\t);\r\n};\r\n\r\n\r\nexport default configureStore({});","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\n\r\n\r\nconst getActions = urls => {\r\n\treturn urls.map(\r\n\t\t(route, index) => {\r\n\t\t\tconst Action = route.action;\r\n\t\t\tconst isExact = route.exact;\r\n\r\n\t\t\tdelete route.action;\r\n\t\t\tdelete route.exact;\r\n\r\n\t\t\treturn (\r\n\t\t\t\tisExact\r\n\t\t\t\t\t? <Action key={index} {...route} exact />\r\n\t\t\t\t\t: <Action key={index} {...route} />\r\n\t\t\t);\r\n\t\t}\r\n\t);\r\n};\r\n\r\nexport default ({ getUrls }) => (\r\n\t<Switch>\r\n\t\t{ getActions(getUrls()) }\r\n\t</Switch>\r\n);","const protocol = 'http://';\r\n//  const domain = 'localhost';\r\n//  const domain = 'ivan-website.000webhostapp.com';\r\n\tconst domain = 'kspace-mailer.hol.es';\r\n    const path = '/test-server/';\r\n\r\n\r\nexport default protocol + domain + path;","import HOST from '$const/server_params';\r\n\r\n\r\nconst showError = (funcName, message) => {\r\n\tconsole.log(`--------------------`);\r\n\tconsole.log(`module: «api - server - index.js»`);\r\n\tconsole.log(`error func: «${funcName}»`);\r\n\tconsole.log(`error message: ${message}`);\r\n\tconsole.log(`--------------------`);\r\n};\r\nconst saveOnServer = obj => {\r\n\tconst data = new FormData();\r\n\tdata.append(\r\n\t\t'data',\r\n\t\tJSON.stringify(obj)\r\n\t);\r\n\r\n\tconst url = HOST + 'server_setter.php';\r\n\tconst params = {\r\n\t\tmethod: 'POST',\r\n\t\t  body: data\r\n\t};\r\n\r\n\tfetch(url, params)\r\n\t\t.then(\r\n\t\t\tresponse => response.text()\r\n\t\t)\r\n\t\t.then(\r\n\t\t\tresAsText => {\r\n\t\t\t\tif (resAsText !== 'Success') {\r\n\t\t\t\t\tshowError('saveOnServer', `action: ${obj.action}, serverAnswer: ${resAsText}`);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t)\r\n};\r\n\r\n\r\nexport const getStartList = () => (\r\n\tfetch(HOST + 'server_getter.php')\r\n\t\t.then(\r\n\t\t\tresponse => response.text()\r\n\t\t)\r\n\t\t.then(\r\n\t\t\tresAsText => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\treturn JSON.parse(resAsText);\r\n\t\t\t\t}\r\n\t\t\t\tcatch (e) {\r\n\t\t\t\t\tshowError('getStartList', resAsText);\r\n\t\t\t\t\treturn [];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t)\r\n);\r\nexport const getUpdatedList = () => {\r\n\tconst data = new FormData();\r\n\tdata.append(\r\n\t\t'time',\r\n\t\tJSON.stringify(+new Date())\r\n\t);\r\n\r\n\tconst url = HOST + 'long_polling.php';\r\n\tconst params = {\r\n\t\tmethod: 'POST',\r\n\t\t  body: data\r\n\t};\r\n\r\n\treturn (\r\n\t\tfetch(url, params)\r\n\t\t\t.then(\r\n\t\t\t\tresponse => response.text()\r\n\t\t\t)\r\n\t\t\t.then(\r\n\t\t\t\tresAsText => {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\treturn JSON.parse(resAsText);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch (e) {\r\n\t\t\t\t\t\tshowError('getUpdatedList', resAsText);\r\n\t\t\t\t\t\treturn [];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t)\r\n};\r\nexport const updateTask = (id, value) => {\r\n\tsaveOnServer({\r\n\t\taction: 'update_task',\r\n\t\tid,\r\n\t\tvalue\r\n\t});\r\n};\r\nexport const addNewTask = value => {\r\n\tsaveOnServer({\r\n\t\taction: 'add_task',\r\n\t\tvalue\r\n\t});\r\n};\r\nexport const deleteTask = id => {\r\n\tsaveOnServer({\r\n\t\taction: 'delete_task',\r\n\t\tid\r\n\t});\r\n};\r\nexport const doneTask = id => {\r\n\tsaveOnServer({\r\n\t\taction: 'done_task',\r\n\t\tid\r\n\t});\r\n};","import { INIT_CURRENT_LIST } from '$const/actionTypes';\r\n\r\n\r\nexport default {\r\n\tinitCurrentList: tasks => ({\r\n\t\ttype: INIT_CURRENT_LIST,\r\n\t\ttasks\r\n\t}),\r\n};","import { connect as reactConnect } from 'react-redux';\r\nimport { push } from '$store/actions/dispatchers';\r\nimport Start from '$comp/PageStart';\r\n\r\n\r\nconst mapStateToProps = () => ({});\r\nconst mapDispatchToProps = {push};\r\nconst connect = reactConnect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default connect(Start);","import { push as routerPush } from 'connected-react-router';\r\nimport { getStartList, getUpdatedList } from '$server/index';\r\nimport creators from './creators.js';\r\n\r\n\r\nexport const listInit = () => dispatch => {\r\n\tconst longPolling = () => {\r\n\t\tgetUpdatedList()\r\n\t\t\t.then(\r\n\t\t\t\ttasks => {\r\n\t\t\t\t\tif (Array.isArray(tasks)) {\r\n\t\t\t\t\t\tdispatch(creators.initCurrentList(tasks));\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tconsole.log( tasks );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\t.then(\r\n\t\t\t\t() => {\t\t\t\t\t\t\t\t//\tremove for long-polling\r\n\t\t\t\t\tsetTimeout(\t\t\t\t\t\t//\tremove for long-polling\r\n\t\t\t\t\t\t() => {\t\t\t\t\t\t//\tremove for long-polling\r\n\t\t\t\t\t\t\tlongPolling();\r\n\t\t\t\t\t\t},\t\t\t\t\t\t\t//\tremove for long-polling\r\n\t\t\t\t\t\t500\t\t\t\t\t\t\t//\tremove for long-polling\r\n\t\t\t\t\t);\t\t\t\t\t\t\t\t//\tremove for long-polling\r\n\t\t\t\t}\t\t\t\t\t\t\t\t\t//\tremove for long-polling\r\n\t\t\t)\r\n\t};\r\n\r\n\tgetStartList()\r\n\t\t.then(\r\n\t\t\ttasks => {\r\n\t\t\t\tif (Array.isArray(tasks)) {\r\n\t\t\t\t\tdispatch(creators.initCurrentList(tasks));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t)\r\n\t\t.then(\r\n\t\t\t() => {\r\n\t\t\t\tlongPolling();\r\n\t\t\t}\r\n\t\t);\r\n};\r\nexport const push = path => dispatch => {\r\n\tdispatch(routerPush(path));\r\n};","import React from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport '$assets/styles/PageStart.css';\r\n\r\n\r\nexport default ({ push }) => {\r\n\tconst handleClick = () => {\r\n\t\tpush('/list');\r\n\t};\r\n\r\n\treturn <Button\tclassName=\"btnShow\" onClick={handleClick}>Show list</Button>;\r\n}","import React, { Component, createRef } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport '$assets/styles/SingleTask.css';\r\n\r\n\r\nexport default class SingleTask extends Component {\r\n\thandleUpdateStart = () => {\r\n\t\tconst { changeTotalUpdating } = this.props;\r\n\r\n\t\tthis.setState({\r\n\t\t\tisCurrentUpdating: true\r\n\t\t});\r\n\r\n\t\tchangeTotalUpdating(\r\n\t\t\ttrue,\r\n\t\t\tscrollTop => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tscrollTop: scrollTop\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\thandleKeyDown = e => {\r\n\t\tif (e.keyCode === 13) {\r\n\t\t\tif (this.state.changingValue.trim()) {\r\n\t\t\t\tthis.handleUpdateSave();\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (e.keyCode === 27) {\r\n\t\t\tthis.handleUpdateCancel();\r\n\t\t}\r\n\t};\r\n\thandleTextChange = e => {\r\n\t\tthis.setState({\r\n\t\t\tchangingValue: e.target.value\r\n\t\t});\r\n\t};\r\n\thandleUpdateCancel = () => {\r\n\t\tconst { fieldAddTask, changeTotalUpdating } = this.props;\r\n\t\tconst { value } = this.state;\r\n\r\n\t\tthis.setState({\r\n\t\t\tisCurrentUpdating: false,\r\n\t\t\t    changingValue: value\r\n\t\t});\r\n\t\tthis.updatedField = null;\r\n\t\tfieldAddTask.focus();\r\n\r\n\t\tchangeTotalUpdating(false, () => {});\r\n\t};\r\n\thandleUpdateSave = () => {\r\n\t\tconst { fieldAddTask, changeTotalUpdating, updateTask } = this.props;\r\n\t\tconst { id, changingValue } = this.state;\r\n\r\n\t\tthis.setState({\r\n\t\t\tisCurrentUpdating: false,\r\n\t\t\t            value: changingValue\r\n\t\t});\r\n\t\tthis.updatedField = null;\r\n\t\tfieldAddTask.focus();\r\n\r\n\t\tchangeTotalUpdating(false, () => {});\r\n\t\tupdateTask(id, changingValue);\r\n\t};\r\n\r\n\thandleRemoveTask = () => {\r\n\t\tconst { fieldAddTask, deleteTask } = this.props;\r\n\t\tconst { id } = this.state;\r\n\t\tfieldAddTask.focus();\r\n\r\n\t\tdeleteTask(id);\r\n\t};\r\n\thandleDoneTask = () => {\r\n\t\tconst { fieldAddTask, doneTask } = this.props;\r\n\t\tconst { id } = this.state;\r\n\r\n\t\tthis.setState({\r\n\t\t\tisDone: true\r\n\t\t});\r\n\t\tfieldAddTask.focus();\r\n\r\n\t\tdoneTask(id);\r\n\t};\r\n\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tconst { taskInfo, scrollTop, isScroll } = props;\r\n\r\n\t\tthis.state = {\r\n\t\t\tscrollTop,\r\n\t\t\tisScroll,\r\n\t\t\tisCurrentUpdating: false,\r\n\t\t\t  isTotalUpdating: false,\r\n\t\t\t\tchangingValue: taskInfo.value,\r\n\r\n\t\t\t\t\t\t   id: taskInfo.id,\r\n\t\t\t\t\t\tvalue: taskInfo.value,\r\n\t\t\t\t\t   isDone: taskInfo.isDone\r\n\t\t};\r\n\r\n\t\tthis.updatedFieldRef = createRef();\r\n\t\t   this.updatedField = null;\r\n\t}\r\n\r\n\tshouldComponentUpdate(nextProps, nextState, nextContext) {\r\n\t\tif (nextProps['taskInfo'].value !== this.props['taskInfo'].value) {\r\n\t\t\tthis.setState({\r\n\t\t\t\t        value: nextProps['taskInfo'].value,\r\n\t\t\t\tchangingValue: nextProps['taskInfo'].value\r\n\t\t\t});\r\n\t\t}\r\n\t\tif (nextProps['taskInfo'].isDone !== this.props['taskInfo'].isDone) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tisDone: nextProps['taskInfo'].isDone\r\n\t\t\t});\r\n\t\t}\r\n\t\tif (nextProps.isTotalUpdating !== this.props.isTotalUpdating) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tisTotalUpdating: nextProps.isTotalUpdating\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\r\n\tcomponentDidUpdate(prevProps, prevState, snapShot) {\r\n\t\tif (this.updatedField) {\r\n\t\t\tif (this.state.isCurrentUpdating) {\r\n\t\t\t\tthis.updatedField.focus();\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this.updatedFieldRef.current) {\r\n\t\t\t\tthis.updatedField = this.updatedFieldRef.current;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (prevProps.isScroll !== this.props.isScroll) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tisScroll: this.props.isScroll\r\n\t\t\t});\r\n\t\t\tthis.forceUpdate();\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tisDone,\r\n\t\t\tvalue,\r\n\t\t\tchangingValue,\r\n\t\t\tisCurrentUpdating,\r\n\t\t\tisTotalUpdating,\r\n\t\t\tscrollTop,\r\n\t\t\tisScroll\r\n\t\t} = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t{\r\n\t\t\t\tisDone\r\n\t\t\t\t\t? (\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName=\"singleTask\"\r\n\t\t\t\t\t\t\tstyle={{ backgroundColor: '#3b9' }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<div className=\"taskValue\">{value}</div>\r\n\t\t\t\t\t\t\t<div className={\r\n\t\t\t\t\t\t\t\t`controls ${(isTotalUpdating || !isScroll ) ? 'isUpdating' : 'notUpdating'}`\r\n\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tclassName=\"btn btnRemoveDone\"\r\n\t\t\t\t\t\t\t\t\tonClick={this.handleRemoveTask}\r\n\t\t\t\t\t\t\t\t\tdisabled={isTotalUpdating}\r\n\t\t\t\t\t\t\t\t>Remove</Button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t\t: (\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName=\"singleTask\"\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tbackgroundColor: isCurrentUpdating ? '#b9daff' : '#ccc'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tisCurrentUpdating\r\n\t\t\t\t\t\t\t\t? (\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"inputWrapper\"\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tborder: isCurrentUpdating ? '2px solid #55c' : 'none'\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"updateTaskField\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ marginTop: `${6 - scrollTop}px` }}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={changingValue}\r\n\t\t\t\t\t\t\t\t\t\t\t\tref={this.updatedFieldRef}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleTextChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonKeyDown={this.handleKeyDown}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.test}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className={\r\n\t\t\t\t\t\t\t\t\t\t\t`controls ${(isTotalUpdating || !isScroll ) ? 'isUpdating' : 'notUpdating'}`\r\n\t\t\t\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btnBig btnUpdateSave\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.handleUpdateSave}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={!changingValue.trim()}\r\n\t\t\t\t\t\t\t\t\t\t\t>Save</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btnBig btnUpdateCancel\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.handleUpdateCancel}\r\n\t\t\t\t\t\t\t\t\t\t\t>Cancel</Button>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t: (\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"taskValue\">{value}</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className={\r\n\t\t\t\t\t\t\t\t\t\t\t`controls ${(isTotalUpdating || !isScroll ) ? 'isUpdating' : 'notUpdating'}`\r\n\t\t\t\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btnSmall btnDone\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.handleDoneTask}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={isTotalUpdating}\r\n\t\t\t\t\t\t\t\t\t\t\t>Done</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btnSmall btnUpdateBegin\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.handleUpdateStart}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={isTotalUpdating}\r\n\t\t\t\t\t\t\t\t\t\t\t>Update</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btnSmall btnRemove\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.handleRemoveTask}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={isTotalUpdating}\r\n\t\t\t\t\t\t\t\t\t\t\t>Remove</Button>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t}\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}","import { connect as reactConnect } from 'react-redux';\r\nimport { deleteTask, doneTask, updateTask } from '$server/index';\r\nimport SingleTask from '$comp/todo_list/SingleTask';\r\n\r\n\r\nconst mapStateToProps = () => ({ deleteTask, doneTask, updateTask });\r\nconst mapDispatchToProps = {};\r\nconst connect = reactConnect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default connect(SingleTask);","import React, { Component } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\n\r\nimport SingleTask from '$cont/todo_list/SingleTask';\r\n\r\nimport '$assets/styles/TaskList.css';\r\n\r\n\r\nexport default class TaskList extends Component {\r\n\tgetOrder = tasks => tasks.reduce(\r\n\t\t(result, task) => {\r\n\t\t\tresult.push(task.id);\r\n\t\t\treturn result;\r\n\t\t},\r\n\t\t[]\r\n\t);\r\n\tchangeUpdatingState = (isTotalUpdating, changeScrollTop) => {\r\n\t\tthis.setState({\r\n\t\t\tisTotalUpdating\r\n\t\t});\r\n\t\tthis.props.changeUpdating(isTotalUpdating);\r\n\r\n\t\tif (isTotalUpdating) {\r\n\t\t\tchangeScrollTop(this.scrollTop);\r\n\t\t}\r\n\t};\r\n\tonDragEnd = result => {\r\n\t\tif (result.destination) {\r\n\t\t\tconst reorder = (list, startIndex, endIndex) => {\r\n\t\t\t\tconst result = Array.from(list);\r\n\t\t\t\tconst [removed] = result.splice(startIndex, 1);\r\n\t\t\t\tresult.splice(endIndex, 0, removed);\r\n\r\n\t\t\t\treturn result;\r\n\t\t\t};\r\n\t\t\tconst items = reorder(\r\n\t\t\t\tthis.state.items,\r\n\t\t\t\tresult.source.index,\r\n\t\t\t\tresult.destination.index\r\n\t\t\t);\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\titems,\r\n\t\t\t\torder: this.getOrder(items)\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tprops.listInit();\r\n\r\n\t\tthis.state = {\r\n\t\t\t          items: [],\r\n\t\t\t\t\t  order: [],\r\n\t\t\t\t   isScroll: false,\r\n\t\t\tisTotalUpdating: false\r\n\t\t};\r\n\t\tthis.scrollTop = 0;\r\n\t}\r\n\r\n\tshouldComponentUpdate(nextProps, nextState, nextContext) {\r\n\t\tif (this.props.tasks !== nextProps.tasks ) {\r\n\t\t\tif (this.props.tasks.length === 0) {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\titems: nextProps.tasks,\r\n\t\t\t\t\torder: this.getOrder(nextProps.tasks)\r\n\t\t\t\t});\r\n\t\t\t\tif (nextProps.tasks.length > 7) {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tisScroll: true\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif (nextProps.tasks.length <= 7) {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tisScroll: false\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet newList = [];\r\n\r\n\t\t\t\tthis.state.order.forEach(\r\n\t\t\t\t\tid => {\r\n\t\t\t\t\t\tnextProps.tasks.forEach(\r\n\t\t\t\t\t\t\tnewProp => {\r\n\t\t\t\t\t\t\t\tif (newProp.id === id) {\r\n\t\t\t\t\t\t\t\t\tnewList.push(newProp)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t\tnextProps.tasks.forEach(\r\n\t\t\t\t\tnewProp => {\r\n\t\t\t\t\t\tlet isNotPresent = true;\r\n\r\n\t\t\t\t\t\tnewList.forEach(\r\n\t\t\t\t\t\t\tlistProp => {\r\n\t\t\t\t\t\t\t\tif (newProp.id === listProp.id) {\r\n\t\t\t\t\t\t\t\t\tisNotPresent = false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tif (isNotPresent) {\r\n\t\t\t\t\t\t\tnewList.push(newProp)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\titems: newList\r\n\t\t\t\t});\r\n\t\t\t\tif (!this.state.isScroll && newList.length > 7) {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tisScroll: true\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif (this.state.isScroll && newList.length <= 7) {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tisScroll: false\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps, prevState, snapShot) {\r\n\t\tconst list = document.body.getElementsByClassName('todoList')[0];\r\n\r\n\t\tif (list) {\r\n\t\t\tlist.addEventListener(\r\n\t\t\t\t'scroll',\r\n\t\t\t\te => {\r\n\t\t\t\t\tthis.scrollTop = e.srcElement.scrollTop;\r\n\t\t\t\t}\r\n\t\t\t);\r\n\r\n\t\t\tif (this.needScrolling) {\r\n\t\t\t\tthis.needScrolling = false;\r\n\t\t\t\tlist.scrollTo(0, list.scrollHeight);\r\n\t\t\t}\r\n\t\t\tif (\r\n\t\t\t\t(prevProps.tasks.length < this.props.tasks.length)\r\n\t\t\t\t&&\r\n\t\t\t\t(prevProps.tasks.length !== 0)\r\n\t\t\t) {\r\n\t\t\t\tthis.needScrolling = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { fieldAddTask } = this.props;\r\n\t\tconst { isTotalUpdating, items, isScroll } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<DragDropContext onDragEnd={this.onDragEnd}>\r\n\t\t\t\t<Droppable droppableId=\"droppable\" isDropDisabled={isTotalUpdating}>\r\n\t\t\t\t{\r\n\t\t\t\t\tprovided => (\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName=\"todoList\"\r\n\t\t\t\t\t\t\tref={provided.innerRef}\r\n\t\t\t\t\t\t\tstyle={{ overflowY: isTotalUpdating ? 'hidden' : 'auto' }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{items.map(\r\n\t\t\t\t\t\t\t\t(item, index) => (\r\n\t\t\t\t\t\t\t\t\t<Draggable\r\n\t\t\t\t\t\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\t\t\t\t\t\tdraggableId={item.id}\r\n\t\t\t\t\t\t\t\t\t\tindex={index}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tprovided => (\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"taskWrapper\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}\r\n\t\t\t\t\t\t\t\t\t\t\t\t{...provided['draggableProps']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t{...provided['dragHandleProps']}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t...provided.draggableProps.style,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcursor: isTotalUpdating ? 'default' : 'move',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<SingleTask\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttaskInfo={item}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisTotalUpdating={isTotalUpdating}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tchangeTotalUpdating={this.changeUpdatingState}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfieldAddTask={fieldAddTask}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisScroll={isScroll}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</Draggable>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t{ provided.placeholder }\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t\t</Droppable>\r\n\t\t\t</DragDropContext>\r\n\t\t);\r\n\t}\r\n}","import { connect as reactConnect } from 'react-redux';\r\nimport { listInit } from '$store/actions/dispatchers';\r\nimport { getTasks } from '$store/selectors/index';\r\nimport List from '$comp/todo_list/TasksList';\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n\ttasks: getTasks(state),\r\n});\r\nconst mapDispatchToProps = {listInit};\r\nconst connect = reactConnect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default connect(List);","export const getTasks = state => state.tasks;","import React, { Component, createRef } from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport '$assets/styles/ActionsBlock.css';\r\n\r\n\r\nexport default class ActionsBlock extends Component {\r\n\taddNewTaskHandle = () => {\r\n\t\tthis.props.addNewTask(this.state.taskValue);\r\n\t\tthis.addFieldRef.current.focus();\r\n\t\tthis.setState({\r\n\t\t\ttaskValue: ''\r\n\t\t});\r\n\t};\r\n\thandleTextChange = e => {\r\n\t\tthis.setState({\r\n\t\t\ttaskValue: e.target.value\r\n\t\t});\r\n\t};\r\n\thandleKeyDown = e => {\r\n\t\tif (e.keyCode === 13) {\r\n\t\t\tif (!this.state.isUpdating) {\r\n\t\t\t\tthis.addNewTaskHandle();\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\t taskValue: '',\r\n\t\t\tisUpdating: false\r\n\t\t};\r\n\t\tthis.addFieldRef = createRef();\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.props.getAddTaskInput(this.addFieldRef.current);\r\n\t\tthis.addFieldRef.current.focus();\r\n\t}\r\n\r\n\tshouldComponentUpdate(nextProps, nextState, nextContext) {\r\n\t\tif (nextProps.isUpdating !== this.props.isUpdating) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tisUpdating: nextProps.isUpdating\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { taskValue, isUpdating } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"actionsBlock\">\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName=\"addTaskField\"\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tvalue={taskValue}\r\n\t\t\t\t\tref={this.addFieldRef}\r\n\t\t\t\t\tonChange={this.handleTextChange}\r\n\t\t\t\t\tonKeyDown={this.handleKeyDown}\r\n\t\t\t\t/>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tclassName=\"btnAddNew\"\r\n\t\t\t\t\tonClick={this.addNewTaskHandle}\r\n\t\t\t\t\tdisabled={\r\n\t\t\t\t\t\t!taskValue.trim()\r\n\t\t\t\t\t\t||\r\n\t\t\t\t\t\tisUpdating\r\n\t\t\t\t\t}\r\n\t\t\t\t>Add task</Button>\r\n\t\t\t</div>\r\n\t\t)\r\n\t};\r\n}","import { connect as reactConnect } from 'react-redux';\r\nimport { addNewTask } from '$server/index';\r\nimport Actions from '$comp/todo_list/ActionsBlock';\r\n\r\n\r\nconst mapStateToProps = () => ({ addNewTask });\r\nconst mapDispatchToProps = {};\r\nconst connect = reactConnect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default connect(Actions);","import React, { Component } from 'react';\r\n\r\nimport TasksList from '$cont/todo_list/TasksList';\r\nimport ActionsBlock from '$cont/todo_list/ActionsBlock';\r\n\r\nimport '$assets/styles/PageList.css';\r\n\r\n\r\nexport default class PageTodoList extends Component {\r\n\tgetAddTaskInput = inputAddTask => {\r\n\t\tthis.setState({\r\n\t\t\tinputAddTask\r\n\t\t});\r\n\t};\r\n\tchangeUpdating = isUpdating => {\r\n\t\tthis.setState({\r\n\t\t\tisUpdating\r\n\t\t});\r\n\t};\r\n\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tinputAddTask: null,\r\n\t\t\t  isUpdating: false\r\n\t\t};\r\n\t}\r\n/*\r\n\tcomponentDidUpdate(prevProps, prevState, snapshot) {\r\n\t\tif (!this.setAddTaskFocus && this.state.inputAddTask) {\r\n\t\t\tthis.setAddTaskFocus = () => {\r\n\t\t\t\tthis.state.inputAddTask.focus();\r\n\t\t\t};\r\n\t\t\tthis.forceUpdate();\r\n\t\t}\r\n\t}\r\n*/\r\n\trender() {\r\n\t\tconst { inputAddTask, isUpdating } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"pageTodoList\">\r\n\t\t\t\t<TasksList\r\n\t\t\t\t\tfieldAddTask={inputAddTask}\r\n\t\t\t\t\tchangeUpdating={this.changeUpdating}\r\n\t\t\t\t/>\r\n\t\t\t\t<ActionsBlock\r\n\t\t\t\t\tgetAddTaskInput={this.getAddTaskInput}\r\n\t\t\t\t\tisUpdating={isUpdating}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}","import { Route, Redirect } from 'react-router-dom';\r\n\r\nimport Start from '$cont/PageStart';\r\nimport List from '$comp/todo_list/PageTodoList';\r\n\r\n\r\nconst appRoutes = () => {\r\n\tconst main = [\r\n\t\t{\r\n\t\t\t   action: Route,\r\n\t\t\t     path: '/',\r\n\t\t\tcomponent: Start,\r\n\t\t\t    exact: true\r\n\t\t},\r\n\t\t{\r\n\t\t\t   action: Route,\r\n\t\t\t     path: '/list',\r\n\t\t\tcomponent: List,\r\n\t\t\t    exact: true\r\n\t\t}\r\n\t];\r\n\tconst support = [\r\n\t\t{\r\n\t\t\taction: Redirect,\r\n\t\t\t  from: '/*',\r\n\t\t\t    to: '/',\r\n\t\t\t exact: false\r\n\t\t}\r\n\t];\r\n\r\n\treturn main.concat(support);\r\n};\r\n\r\n\r\nexport default appRoutes;","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n\r\nexport default createMuiTheme({\r\n\ttypography: {\r\n\t\tuseNextVariants: true,\r\n\t}\r\n});","import React from 'react';\nimport { render } from 'react-dom';\nimport App from './app/blocks/AppMain.js';\nimport '$assets/styles/index.css';\n\n\nconst app = <App />;\nconst root = document.getElementById('root');\n\nrender(app, root);","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { ConnectedRouter } from 'connected-react-router';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\nimport { history } from '$store/storage/helpers';\r\nimport store from '$store/storage/index';\r\nimport Routes from '$routes/index';\r\nimport appRoutes from '$routes/appRoutes';\r\nimport theme from '$assets/themes/MainTheme';\r\n\r\n\r\nexport default () => (\r\n\t<Provider store={store}>\r\n\t\t<ConnectedRouter history={history}>\r\n\t\t\t<MuiThemeProvider theme={theme}>\r\n\t\t\t\t<Routes getUrls={appRoutes} />\r\n\t\t\t</MuiThemeProvider>\r\n\t\t</ConnectedRouter>\r\n\t</Provider>\r\n);"],"sourceRoot":""}