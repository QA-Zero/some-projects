{"version":3,"sources":["app/api/store/storage/index.js","app/api/store/storage/helpers.js","app/const/boardParams.js","app/api/store/reducers/index.js","app/api/store/reducers/params.js","app/const/actionTypes.js","app/api/store/reducers/game.js","app/routes/index.js","app/api/store/selectors/stateFromStore.js","app/api/utils/index.js","app/api/store/actions/creators.js","app/api/store/actions/dispatchers.js","app/const/emoji.js","app/blocks/containers/total/Emoji.js","app/blocks/components/total/Emoji.jsx","app/blocks/components/start_page/StartPage.jsx","app/blocks/containers/start_page/StartPage.js","app/api/store/selectors/stateAsParam.js","app/blocks/containers/game_page/header/Header.js","app/blocks/components/game_page/header/Header.jsx","app/blocks/containers/game_page/board/Tile.js","app/blocks/components/game_page/board/Tile.jsx","app/blocks/containers/game_page/board/GameBoard.js","app/blocks/components/game_page/board/GameBoard.jsx","app/blocks/containers/game_page/footer/FlagsLeft.js","app/blocks/components/game_page/footer/FlagsLeft.jsx","app/blocks/containers/game_page/footer/MovesCount.js","app/blocks/components/game_page/footer/MovesCount.jsx","app/blocks/components/game_page/footer/GameTimer.jsx","app/blocks/containers/game_page/footer/GameTimer.js","app/blocks/containers/game_page/footer/Footer.js","app/blocks/components/game_page/footer/Footer.jsx","app/blocks/components/game_page/GamePage.jsx","app/blocks/containers/game_page/GamePage.js","app/routes/appRoutes.js","assets/themes/MainTheme.js","index.js","app/blocks/AppMain.js"],"names":["initialState","middlewares","enhancers","devTools","window","devToolsEnhancer","composeWithDevTools","name","realtime","hostname","port","history","createBrowserHistory","allValues","rows","cols","mines","defaultValues","rowLength","colLength","combineReducers","params","state","arguments","length","undefined","action","type","game","fromJS","tiles","gameParams","tilesChecked","moves","flagsLeft","start","status","bangIndex","setIn","Date","now","configureStore","thunk","routerMiddleware","applyMiddleware","apply","createStore","connectRouter","rootReducer","compose","routes","_ref","getUrls","react_default","a","createElement","Switch","map","route","index","Action","isExact","exact","Object","assign","key","getInitTiles","store","getState","board","getAroundTilesIndex","rowIndex","colIndex","getTilesIndex","checkAvailable","aroundTilesInfo","getIn","isAvailable","List","filter","tileInfo","tile","nearTile","size","updateEnvironment","Math","floor","updateCoord","repeat","n","value","array","push","Map","minesCount","aroundIndexes","isMine","isChecked","isFlagged","cellsMine","cellsSafe","concat","generateBoard","sort","random","flagsState","wantAdd","canAdd","getCheckedCount","reduce","sum","creators","boardParams","objectSpread","tileIndex","updateTilesFlag","flagAdding","getFlagsLeft","toJS","currentTiles","newTiles","openAroundTiles","newIndex","result","currentIndex","removeIn","indexOf","getBangIndex","getMoves","path","dispatch","routerPush","emoji","-1","0","1","notChecked","flag","bang","bomb","num_0","num_1","num_2","num_3","num_4","num_5","num_6","num_7","num_8","connect","reactConnect","ownProps","className","style","fontSize","CustomRadioGroup","label","groupName","handleChange","values","current","RadioGroup_default","onChange","e","target","FormControlLabel_default","control","Radio_default","Options","_ref2","StartPage_CustomRadioGroup","SearchBox","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setState","defineProperty","handleStart","_this$props","initBoardParams","_this2","document","addEventListener","keyCode","_this3","removeEventListener","containers_total_Emoji","StartPage_Options","Button_default","onClick","Component","mapDispatchToProps","StartPage","getBoardTiles","getGameStatus","getBoardRows","tilesIndex","boardCell","row","newRow","styles","color","flagToggle","checkTile","getTileEmoji","isNotFlagged","getTileFlagged","isGameContinue","getIsChecked","width","height","borderWidth","cursor","backgroundColor","onContextMenu","preventDefault","game_page_board_Tile","minesLeft","minesChecked","getMinesLeft","GameTimer","updateTimer","timer","setInterval","forceUpdate","clearInterval","prevProps","prevState","snapshot","currentTime","round","startTime","getStartTime","Footer","footer_FlagsLeft","game_page_footer_MovesCount","game_page_footer_GameTimer","GamePage","handleRestart","startGame","handleNewParams","game_page_header_Header","game_page_board_GameBoard","game_page_footer_Footer","appRoutes","main","Route","component","Start","Game","support","Redirect","from","to","createMuiTheme","typography","useNextVariants","app","es","lib","core_styles","theme","root","getElementById","render"],"mappings":"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","file":"static/js/main.0aaf5efe.chunk.js","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\r\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\r\nimport { devTools, history } from './helpers.js';\r\n\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '$store/reducers/index';\r\n\r\n\r\nconst configureStore = (initialState) => {\r\n\tconst middlewares = [\r\n\t\tthunk,\r\n\t\trouterMiddleware(history)\r\n\t];\r\n\tconst enhancers = [\r\n\t\tapplyMiddleware(...middlewares),\r\n\t\tdevTools()\r\n\t];\r\n\r\n\treturn createStore(\r\n\t\tconnectRouter(history)(rootReducer),\r\n\t\tinitialState,\r\n\t\tcompose(...enhancers)\r\n\t);\r\n};\r\n\r\n\r\nexport default configureStore({});","import { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { createBrowserHistory } from 'history';\r\n\r\n\r\nexport const devTools = window.devToolsEnhancer || composeWithDevTools({\r\n\t    name: 'AppMainWrapper.appRoutes appRoutes',\r\n\trealtime: true,\r\n\thostname: 'localhost',\r\n\t    port: 8000\r\n});\r\nexport const history = createBrowserHistory();","export const allValues = {\r\n\t rows: [10, 12, 14],\r\n\t cols: [6, 8, 10],\r\n\tmines: [14, 20, 32]\r\n};\r\nexport const defaultValues = {\r\n\t rowLength: allValues.rows[0],\r\n\t colLength: allValues.cols[0],\r\n\t     mines: allValues.mines[0]\r\n};","import { combineReducers } from 'redux';\r\nimport params from './params.js';\r\nimport game from './game.js';\r\n\r\n\r\nexport default combineReducers({ params, game });","import { INIT_BOARD_PARAMS } from '$const/actionTypes';\r\nimport { defaultValues } from '$const/boardParams';\r\n\r\n\r\nexport default (\r\n\tstate = defaultValues,\r\n\taction = {}\r\n) => {\r\n\tswitch (action.type) {\r\n\t\tcase INIT_BOARD_PARAMS: {\r\n\t\t\treturn action.params;\r\n\t\t}\r\n\r\n\t\tdefault: {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n};","export const INIT_BOARD_PARAMS    = 'INIT_BOARD_PARAMS';\r\nexport const START_GAME           = 'START_GAME';\r\nexport const TOGGLE_FLAG          = 'TOGGLE_FLAG';\r\nexport const CHECK_TILE           = 'CHECK_TILE';\r\nexport const UPDATE_CHECKED_TILES = 'UPDATE_CHECKED_TILES';","import {\r\n\tSTART_GAME,\r\n\tTOGGLE_FLAG,\r\n\tCHECK_TILE,\r\n\tUPDATE_CHECKED_TILES\r\n} from '$const/actionTypes';\r\nimport { fromJS } from 'immutable';\r\n\r\n\r\nexport default (\r\n\tstate = fromJS({\r\n\t\t     tiles: [],\r\n\t\tgameParams: {\r\n\t\t\ttilesChecked: 0,\r\n\t\t\t       moves: 0,\r\n\t\t\t   flagsLeft: 0,\r\n\t\t\t\t   start: 0,\r\n\t\t\t      status: -1,\r\n\t\t\t   bangIndex: -1,\r\n\t\t}\r\n\t}),\r\n\taction = {}\r\n) => {\r\n\tswitch (action.type) {\r\n\t\tcase START_GAME: {\r\n\t\t\treturn (\r\n\t\t\t\tstate\r\n\t\t\t\t\t.setIn(['tiles'], action.tiles)\r\n\t\t\t\t\t.setIn(['gameParams', 'flagsLeft'], action.flagsLeft)\r\n\t\t\t\t\t.setIn(['gameParams', 'start'], Date.now())\r\n\t\t\t\t\t.setIn(['gameParams', 'tilesChecked'], 0)\r\n\t\t\t\t\t.setIn(['gameParams', 'moves'], 0)\r\n\t\t\t\t\t.setIn(['gameParams', 'bangIndex'], -1)\r\n\t\t\t\t\t.setIn(['gameParams', 'status'], -1)\r\n\t\t\t);\r\n\t\t}\r\n\t\tcase TOGGLE_FLAG: {\r\n\t\t\treturn (\r\n\t\t\t\tstate\r\n\t\t\t\t\t.setIn(['tiles'], action.tiles)\r\n\t\t\t\t\t.setIn(['gameParams', 'flagsLeft'], action.flagsLeft)\r\n\t\t\t\t\t.setIn(['gameParams', 'status'], action.status)\r\n\t\t\t);\r\n\t\t}\r\n\t\tcase CHECK_TILE: {\r\n\t\t\treturn (\r\n\t\t\t\tstate\r\n\t\t\t\t\t.setIn(['tiles'], action.tiles)\r\n\t\t\t\t\t.setIn(['gameParams', 'moves'], action.moves)\r\n\t\t\t\t\t.setIn(['gameParams', 'bangIndex'], action.bangIndex)\r\n\t\t\t);\r\n\t\t}\r\n\t\tcase UPDATE_CHECKED_TILES: {\r\n\t\t\treturn (\r\n\t\t\t\tstate\r\n\t\t\t\t\t.setIn(['gameParams', 'tilesChecked'], action.tilesChecked)\r\n\t\t\t\t\t.setIn(['gameParams', 'status'], action.status)\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tdefault: {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n};","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\n\r\n\r\nconst getActions = urls => {\r\n\treturn urls.map(\r\n\t\t(route, index) => {\r\n\t\t\tconst Action = route.action;\r\n\t\t\tconst isExact = route.exact;\r\n\r\n\t\t\tdelete route.action;\r\n\t\t\tdelete route.exact;\r\n\r\n\t\t\treturn (\r\n\t\t\t\tisExact\r\n\t\t\t\t\t? <Action key={index} {...route} exact />\r\n\t\t\t\t\t: <Action key={index} {...route} />\r\n\t\t\t);\r\n\t\t}\r\n\t);\r\n};\r\n\r\nexport default ({ getUrls }) => (\r\n\t<Switch>\r\n\t\t{ getActions(getUrls()) }\r\n\t</Switch>\r\n);","import { initTiles } from '$utils/index';\r\nimport store from '$store/storage/index';\r\n\r\n\r\nexport const getInitTiles = () => initTiles(\r\n\tstore.getState().params\r\n);\r\nexport const getMines = () => store.getState().params.mines;\r\n\r\n\r\nconst flagsState = index => ({\r\n\twantAdd: !store.getState().game.getIn(['tiles', index, 'isFlagged']),\r\n\tcanAdd: (\r\n\t\t!store.getState().game.getIn(['tiles', index, 'isChecked'])\r\n\t\t&&\r\n\t\tstore.getState().game.getIn(['gameParams', 'flagsLeft']) > 0\r\n\t)\r\n});\r\nexport const getTilesFlagged = index => {\r\n\tconst tiles = store.getState().game.getIn(['tiles']);\r\n\tconst updateTilesFlag = (tileIndex, flagAdding) => tiles.setIn(\r\n\t\t[tileIndex],\r\n\t\ttiles.getIn([tileIndex]).setIn(\r\n\t\t\t['isFlagged'],\r\n\t\t\tflagAdding\r\n\t\t)\r\n\t);\r\n\r\n\treturn(\r\n\t\tflagsState(index).wantAdd\r\n\t\t\t? (\r\n\t\t\t\tflagsState(index).canAdd\r\n\t\t\t\t\t? updateTilesFlag(index, true)\r\n\t\t\t\t\t: tiles\r\n\t\t\t)\r\n\t\t\t: updateTilesFlag(index, false)\r\n\t)\r\n};\r\nexport const getFlagsLeft = tileIndex => (\r\n\tflagsState(tileIndex).wantAdd\r\n\t\t? (\r\n\t\t\tflagsState(tileIndex).canAdd\r\n\t\t\t\t? store.getState().game.getIn(['gameParams', 'flagsLeft']) - 1\r\n\t\t\t\t: store.getState().game.getIn(['gameParams', 'flagsLeft'])\r\n\t\t)\r\n\t\t: store.getState().game.getIn(['gameParams', 'flagsLeft']) + 1\r\n);\r\nexport const getStatusFlagged = () => (\r\n\t(\r\n\t\tstore.getState().game.getIn(['gameParams', 'tilesChecked'])\r\n\t\t===\r\n\t\tstore.getState().game.getIn(['tiles']).toJS().length - store.getState().params.mines\r\n\t)\r\n\t&&\r\n\t(store.getState().game.getIn(['gameParams', 'flagsLeft']) - 1 === 0)\r\n\t\t? 1\r\n\t\t: store.getState().game.getIn(['gameParams', 'status'])\r\n);\r\n\r\n\r\nexport const getTilesChecked = index => {\r\n\tconst openAroundTiles = (tiles, newIndex) => {\r\n\t\treturn (tiles.getIn([newIndex, 'aroundIndexes'])\r\n\t\t\t.reduce(\r\n\t\t\t\t(result, currentIndex) => (\r\n\t\t\t\t\tresult.getIn([currentIndex, 'minesCount']) === 0\r\n\t\t\t\t\t\t? (\r\n\t\t\t\t\t\t\topenAroundTiles(\r\n\t\t\t\t\t\t\t\tresult.removeIn([\r\n\t\t\t\t\t\t\t\t\tcurrentIndex,\r\n\t\t\t\t\t\t\t\t\t'aroundIndexes',\r\n\t\t\t\t\t\t\t\t\tresult.getIn([currentIndex, 'aroundIndexes']).indexOf(newIndex)\r\n\t\t\t\t\t\t\t\t]),\r\n\t\t\t\t\t\t\t\tcurrentIndex\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t: result\r\n\t\t\t\t),\r\n\t\t\t\t(tiles.map(\r\n\t\t\t\t\t(tile, currentIndex) => (\r\n\t\t\t\t\t\ttiles.getIn([newIndex, 'aroundIndexes']).indexOf(currentIndex) === -1\r\n\t\t\t\t\t\t\t? tile\r\n\t\t\t\t\t\t\t: tile.setIn(['isChecked'], true)\r\n\t\t\t\t\t)\r\n\t\t\t\t))\r\n\t\t\t)\r\n\t\t)\r\n\t};\r\n\r\n\tconst currentTiles = store.getState().game.getIn(['tiles']);\r\n\tconst newTiles = (\r\n\t\tcurrentTiles\r\n\t\t\t.setIn(\r\n\t\t\t\t[index],\r\n\t\t\t\tcurrentTiles.getIn([index]).setIn(['isChecked'], true)\r\n\t\t\t)\r\n\t\t\t.map(\r\n\t\t\t\ttile => (\r\n\t\t\t\t\ttile.getIn(['isMine']) && currentTiles.getIn([index, 'isMine'])\r\n\t\t\t\t\t\t? tile.setIn(['isChecked'], true)\r\n\t\t\t\t\t\t: tile\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t);\r\n\r\n\treturn (\r\n\t\t!newTiles.getIn([index, 'isMine']) && (newTiles.getIn([index, 'minesCount']) === 0)\r\n\t\t\t? openAroundTiles(newTiles, index)\r\n\t\t\t: newTiles\r\n\t);\r\n};\r\nexport const getCheckedCount = () => (\r\n\tstore.getState().game.getIn(['tiles'])\r\n\t\t.reduce(\r\n\t\t\t(sum, tile) => (\r\n\t\t\t\ttile.getIn(['isChecked'])\r\n\t\t\t\t\t? sum + 1\r\n\t\t\t\t\t: sum\r\n\t\t\t),\r\n\t\t\t0\r\n\t\t)\r\n);\r\nexport const getStatusChecked = index => (\r\n\tstore.getState().game.getIn(['tiles', index, 'isMine'])\r\n\t\t? 0\r\n\t\t: (\r\n\t\t\t(\r\n\t\t\t\tgetCheckedCount()\r\n\t\t\t\t===\r\n\t\t\t\tstore.getState().game.getIn(['tiles']).toJS().length\r\n\t\t\t\t-\r\n\t\t\t\tstore.getState().params.mines\r\n\t\t\t)\r\n\t\t\t&&\r\n\t\t\t(store.getState().game.getIn(['gameParams', 'flagsLeft']) === 0)\r\n\t\t\t\t? 1\r\n\t\t\t\t: store.getState().game.getIn(['gameParams', 'status'])\r\n\t\t)\r\n);\r\nexport const getMoves = index => (\r\n\tstore.getState().game.getIn(['tiles', index, 'isChecked'])\r\n\t\t? store.getState().game.getIn(['gameParams', 'moves'])\r\n\t\t: store.getState().game.getIn(['gameParams', 'moves']) + 1\r\n);\r\nexport const getBangIndex = index => (\r\n\tstore.getState().game.getIn(['tiles', index, 'isMine'])\r\n\t\t? index\r\n\t\t: store.getState().game.getIn(['gameParams', 'bangIndex'])\r\n);","import { Map, List } from 'immutable';\r\n\r\n\r\nexport const initTiles = ({ rowLength, colLength, mines }) => {\r\n\tconst generateBoard = (rowLength, colLength, mines) => {\r\n\t\tconst singleCell = {\r\n\t\t\t     rowIndex: -1,\r\n\t\t\t     colIndex: -1,\r\n\t\t\t   minesCount: -1,\r\n\t\t\taroundIndexes: [],\r\n\t\t\t       isMine: true,\r\n\t\t\t    isChecked: false,\r\n\t\t\t    isFlagged: false\r\n\t\t};\r\n\r\n\t\tconst repeat = (n, value) => {\r\n\t\t\tconst array = [];\r\n\r\n\t\t\twhile (n--) {\r\n\t\t\t\tarray.push(value);\r\n\t\t\t}\r\n\r\n\t\t\treturn List(array);\r\n\t\t};\r\n\t\tconst tile = Map(singleCell);\r\n\t\tconst cellsMine = repeat(mines, tile);\r\n\t\tconst cellsSafe = repeat(\r\n\t\t\trowLength * colLength - mines,\r\n\t\t\ttile.setIn(['isMine'], false)\r\n\t\t);\r\n\r\n\t\treturn cellsMine.concat(cellsSafe);\r\n\t};\r\n\tconst sortCells = board => board.sort(\r\n\t\t() => Math.random() - 0.5\r\n\t);\r\n\tconst updateCoord = (board, rowLength) => board.map(\r\n\t\t(tile, index) => (tile\r\n\t\t\t.setIn(\r\n\t\t\t\t['rowIndex'],\r\n\t\t\t\tindex - Math.floor(index / rowLength) * rowLength\r\n\t\t\t)\r\n\t\t\t.setIn(\r\n\t\t\t\t['colIndex'],\r\n\t\t\t\tMath.floor(index / rowLength)\r\n\t\t\t)\r\n\t\t)\r\n\t);\r\n\tconst updateEnvironment = (board, rowLength, colLength) => {\r\n\t\tconst getAroundTilesIndex = index => {\r\n\t\t\tconst getEnvironment = (rowIndex, colIndex) => {\r\n\t\t\t\tconst getTilesIndex  = (rowIndex, colIndex) => colIndex * rowLength + rowIndex;\r\n\t\t\t\tconst checkAvailable = (rowIndex, colIndex) => (\r\n\t\t\t\t\t(rowIndex >= 0) && (rowIndex < rowLength)\r\n\t\t\t\t\t&&\r\n\t\t\t\t\t(colIndex >= 0) && (colIndex < colLength)\r\n\t\t\t\t);\r\n\r\n\t\t\t\treturn [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t       name: 'n',\r\n\t\t\t\t\t\t      index: getTilesIndex(rowIndex, colIndex - 1),\r\n\t\t\t\t\t\tisAvailable: checkAvailable(rowIndex, colIndex - 1)\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t       name: 'ne',\r\n\t\t\t\t\t\t      index: getTilesIndex(rowIndex + 1, colIndex - 1),\r\n\t\t\t\t\t\tisAvailable: checkAvailable(rowIndex + 1, colIndex - 1)\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t       name: 'e',\r\n\t\t\t\t\t\t      index: getTilesIndex(rowIndex + 1, colIndex),\r\n\t\t\t\t\t\tisAvailable: checkAvailable(rowIndex + 1, colIndex)\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t       name: 'se',\r\n\t\t\t\t\t\t      index: getTilesIndex(rowIndex + 1, colIndex + 1),\r\n\t\t\t\t\t\tisAvailable: checkAvailable(rowIndex + 1, colIndex + 1)\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t       name: 's',\r\n\t\t\t\t\t\t      index: getTilesIndex(rowIndex, colIndex + 1),\r\n\t\t\t\t\t\tisAvailable: checkAvailable(rowIndex, colIndex + 1)\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t       name: 'sw',\r\n\t\t\t\t\t\t      index: getTilesIndex(rowIndex - 1, colIndex + 1),\r\n\t\t\t\t\t\tisAvailable: checkAvailable(rowIndex - 1, colIndex + 1)\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t       name: 'w',\r\n\t\t\t\t\t\t      index: getTilesIndex(rowIndex - 1, colIndex),\r\n\t\t\t\t\t\tisAvailable: checkAvailable(rowIndex - 1, colIndex)\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t       name: 'nw',\r\n\t\t\t\t\t\t      index: getTilesIndex(rowIndex - 1, colIndex - 1),\r\n\t\t\t\t\t\tisAvailable: checkAvailable(rowIndex - 1, colIndex - 1)\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t};\r\n\t\t\tconst aroundTilesInfo = getEnvironment(\r\n\t\t\t\tboard.getIn([index, 'rowIndex']),\r\n\t\t\t\tboard.getIn([index, 'colIndex'])\r\n\t\t\t);\r\n\r\n\t\t\treturn new List(\r\n\t\t\t\taroundTilesInfo\r\n\t\t\t\t\t.filter(tileInfo => tileInfo.isAvailable)\r\n\t\t\t\t\t.map(tileInfo => tileInfo.index)\r\n\t\t\t);\r\n\t\t};\r\n\r\n\t\treturn board.map(\r\n\t\t\t(tile, index) => tile\r\n\t\t\t\t.setIn(\r\n\t\t\t\t\t['aroundIndexes'],\r\n\t\t\t\t\tgetAroundTilesIndex(index)\r\n\t\t\t\t)\r\n\t\t\t\t.setIn(\r\n\t\t\t\t\t['minesCount'],\r\n\t\t\t\t\tgetAroundTilesIndex(index)\r\n\t\t\t\t\t\t.map(index => board.getIn([index]))\r\n\t\t\t\t\t\t.filter(nearTile => nearTile.getIn(['isMine']))\r\n\t\t\t\t\t\t.size\r\n\t\t\t\t)\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\tupdateEnvironment(\r\n\t\t\tupdateCoord(\r\n\t\t\t\tsortCells(\r\n\t\t\t\t\tgenerateBoard(rowLength, colLength, mines)\r\n\t\t\t\t),\r\n\t\t\t\trowLength,\r\n\t\t\t),\r\n\t\t\trowLength,\r\n\t\t\tcolLength\r\n\t\t)\r\n\t);\r\n};\r\n\r\nexport const getBoard = tiles => tiles.reduce(\r\n\t(rows, tile, tilesIndex) => {\r\n\t\tconst boardCell = {\r\n\t\t\ttilesIndex,\r\n\t\t\ttile: tile.toJS()\r\n\t\t};\r\n\r\n\t\tconst colIndex = tile.getIn(['colIndex']);\r\n\t\tconst row = rows.getIn([colIndex]);\r\n\r\n\t\tif (row) {\r\n\t\t\tconst newRow = row.push(boardCell);\r\n\t\t\treturn rows.setIn([colIndex], newRow);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst newRow = new List([boardCell]);\r\n\t\t\treturn rows.push(newRow);\r\n\t\t}\r\n\t},\r\n\tnew List()\r\n);","import {\r\n\tINIT_BOARD_PARAMS,\r\n\tSTART_GAME,\r\n\tTOGGLE_FLAG,\r\n\tCHECK_TILE,\r\n\tUPDATE_CHECKED_TILES\r\n} from '$const/actionTypes';\r\nimport {\r\n\tgetInitTiles,\r\n\tgetMines,\r\n\tgetTilesFlagged,\r\n\tgetFlagsLeft,\r\n\tgetStatusFlagged,\r\n\tgetTilesChecked,\r\n\tgetBangIndex,\r\n\tgetCheckedCount,\r\n\tgetMoves,\r\n\tgetStatusChecked\r\n} from '$store/selectors/stateFromStore';\r\n\r\n\r\nexport default {\r\n\tinitBoardParams: boardParams => ({\r\n\t\t  type: INIT_BOARD_PARAMS,\r\n\t\tparams: {...boardParams}\r\n\t}),\r\n\r\n\r\n\tstartGame: () => ({\r\n\t\t     type: START_GAME,\r\n\t\t    tiles: getInitTiles(),\r\n\t\tflagsLeft: getMines()\r\n\t}),\r\n\tflagToggle: tileIndex => ({\r\n\t\t     type: TOGGLE_FLAG,\r\n\t\t    tiles: getTilesFlagged(tileIndex),\r\n\t\tflagsLeft: getFlagsLeft(tileIndex),\r\n\t\t   status: getStatusFlagged(),\r\n\t}),\r\n\tcheckTile: tileIndex => ({\r\n\t\t        type: CHECK_TILE,\r\n\t\t       tiles: getTilesChecked(tileIndex),\r\n\t\t   bangIndex: getBangIndex(tileIndex),\r\n\t\t       moves: getMoves(tileIndex)\r\n\t}),\r\n\tupdateCheckedTiles: tileIndex => ({\r\n\t\t        type: UPDATE_CHECKED_TILES,\r\n\t\ttilesChecked: getCheckedCount(),\r\n\t\t      status: getStatusChecked(tileIndex)\r\n\t})\r\n};","import { push as routerPush } from 'connected-react-router';\r\nimport creators from './creators.js';\r\n\r\n\r\nexport const initBoardParams = boardParams => dispatch => {\r\n\tdispatch(creators.initBoardParams(boardParams));\r\n};\r\nexport const startGame = () => dispatch => {\r\n\tdispatch(creators.startGame());\r\n};\r\nexport const flagToggle = tileIndex => dispatch => {\r\n\tdispatch(creators.flagToggle(tileIndex));\r\n};\r\nexport const checkTile = tileIndex => dispatch => {\r\n\tdispatch(creators.checkTile(tileIndex));\r\n\tdispatch(creators.updateCheckedTiles(tileIndex));\r\n};\r\nexport const push = path => dispatch => {\r\n\tdispatch(routerPush(path));\r\n};","export default {\r\n\t        '-1': { name: 'PLAYING',     value: '🙂' },\t\t// slightly smiling face\r\n\t         '0': { name: 'LOOSER',      value: '🙁' },\t\t// slightly frowning face\r\n\t         '1': { name: 'WINNER',      value: '😎' },\t\t// sunglasses\r\n\r\n\t'notChecked': {\tname: 'NOT CHECKED', value: '⬜'\t },\t\t// white large square\r\n\t      'flag': { name: 'FLAG',        value: '🚩' },\t\t// triangular flag\r\n\t      'bang': { name: 'BANG',        value: '💥' },\t\t// collision\r\n\t      'bomb': { name: 'BOMB',        value: '💣' },\t\t// bomb\r\n\r\n\t     'num_0': { name: 'CLEAR',     value: '⏹'   },\t\t// stop button\r\n\t     'num_1': { name: '1',         value: '1️⃣' },\t\t// keycap: 1\r\n\t\t 'num_2': { name: '2',         value: '2️⃣' },\t\t// keycap: 2\r\n\t\t 'num_3': { name: '3',         value: '3️⃣' },\t\t// keycap: 3\r\n\t\t 'num_4': { name: '4',         value: '4️⃣' },\t\t// keycap: 4\r\n\t\t 'num_5': { name: '5',         value: '5️⃣' },\t\t// keycap: 5\r\n\t\t 'num_6': { name: '6',         value: '6️⃣' },\t\t// keycap: 6\r\n\t\t 'num_7': { name: '7',         value: '7️⃣' },\t\t// keycap: 7\r\n\t\t 'num_8': { name: '8',         value: '8️⃣' }\t\t// keycap: 8\r\n};\r\n\r\n//\t'notStarted': { name: 'NOT START',   value: '😐' },\t\t// neutral face\r\n//\t     'clear': { name: 'CLEAR',       value: '✅' },\t\t// white heavy check mark","import { connect as reactConnect } from 'react-redux';\r\nimport Emoji from '$comp/total/Emoji';\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n\tsize: ownProps.size,\r\n\ttype: ownProps.type\r\n});\r\nconst mapDispatchToProps = {};\r\nconst connect = reactConnect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default connect(Emoji);","import React from 'react';\r\n\r\nimport emoji from '$const/emoji';\r\n\r\nimport '$assets/styles/total/Emoji.css';\r\n\r\n\r\nexport default ({ size, type }) => {\r\n\treturn (\r\n\t\t<span\r\n\t\t\tclassName={`emoji emoji-${type}`}\r\n\t\t\tstyle={{ fontSize: `${size}pt` }}\r\n\t\t>{emoji[type].value}</span>\r\n\t)\r\n};","import React, { Component } from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\n\r\nimport Emoji from '$cont/total/Emoji';\r\n\r\nimport { allValues, defaultValues } from '$const/boardParams';\r\n\r\nimport '$assets/styles/start_page/StartPage.css';\r\n\r\n\r\nconst CustomRadioGroup = ({ label, groupName, handleChange, values, current }) => (\r\n\t<div className={`block ${label}`}>\r\n\t\t<div className=\"label\">{label}</div>\r\n\r\n\t\t<RadioGroup\r\n\t\t\tclassName=\"rg\"\r\n\t\t\tname={label}\r\n\t\t\tvalue={current + ''}\r\n\t\t\tonChange={e => handleChange(groupName, e.target.value)}\r\n\t\t>\r\n\t\t\t<FormControlLabel\r\n\t\t\t\tclassName=\"row row-first\"\r\n\t\t\t\tlabel={values[0]}\r\n\t\t\t\tvalue={values[0] + ''}\r\n\t\t\t\tcontrol={<Radio />}\r\n\t\t\t/>\r\n\t\t\t<FormControlLabel\r\n\t\t\t\tclassName=\"row row-second\"\r\n\t\t\t\tlabel={values[1]}\r\n\t\t\t\tvalue={values[1] + ''}\r\n\t\t\t\tcontrol={<Radio />}\r\n\t\t\t/>\r\n\t\t\t<FormControlLabel\r\n\t\t\t\tclassName=\"row row-third\"\r\n\t\t\t\tlabel={values[2]}\r\n\t\t\t\tvalue={values[2] + ''}\r\n\t\t\t\tcontrol={<Radio />}\r\n\t\t\t/>\r\n\t\t</RadioGroup>\r\n\t</div>\r\n);\r\nconst Options = ({ rowLength, colLength, mines, handleChange }) => (\r\n\t<div className=\"options\">\r\n\t\t<CustomRadioGroup\r\n\t\t\tlabel=\"rows\"\r\n\t\t\tgroupName=\"rowLength\"\r\n\t\t\thandleChange={handleChange}\r\n\t\t\tvalues={allValues.rows}\r\n\t\t\tcurrent={rowLength}\r\n\t\t/>\r\n\t\t<CustomRadioGroup\r\n\t\t\tlabel=\"cols\"\r\n\t\t\tgroupName=\"colLength\"\r\n\t\t\thandleChange={handleChange}\r\n\t\t\tvalues={allValues.cols}\r\n\t\t\tcurrent={colLength}\r\n\t\t/>\r\n\t\t<CustomRadioGroup\r\n\t\t\tlabel=\"mines\"\r\n\t\t\tgroupName=\"mines\"\r\n\t\t\thandleChange={handleChange}\r\n\t\t\tvalues={allValues.mines}\r\n\t\t\tcurrent={mines}\r\n\t\t/>\r\n\t</div>\r\n);\r\n\r\nexport default class SearchBox extends Component {\r\n\thandleChange = (groupName, value) => {\r\n\t\tthis.setState({\r\n\t\t\t[groupName]: value - 0\r\n\t\t});\r\n\t};\r\n\thandleStart = () => {\r\n\t\tconst { initBoardParams, push } = this.props;\r\n\r\n\t\tinitBoardParams(this.state);\r\n\t\tpush('/game');\r\n\t};\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = defaultValues;\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tdocument.addEventListener(\r\n\t\t\t'keydown',\r\n\t\t\te => {\r\n\t\t\t\tif (e.keyCode === 13) {\r\n\t\t\t\t\tthis.handleStart();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tfalse\r\n\t\t);\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\tdocument.removeEventListener(\r\n\t\t\t'keydown',\r\n\t\t\te => {\r\n\t\t\t\tif (e.keyCode === 13) {\r\n\t\t\t\t\tthis.handleStart();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tfalse\r\n\t\t);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"content\">\r\n\t\t\t\t<Emoji size={15} type=\"bang\" />\r\n\t\t\t\t<Options\r\n\t\t\t\t\t{...this.state}\r\n\t\t\t\t\thandleChange={this.handleChange}\r\n\t\t\t\t/>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tclassName=\"startBtn\"\r\n\t\t\t\t\tonClick={this.handleStart}\r\n\t\t\t\t>Start game</Button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}","import { connect as reactConnect } from 'react-redux';\r\nimport { initBoardParams, push } from '$store/actions/dispatchers';\r\nimport StartPage from '$comp/start_page/StartPage';\r\n\r\n\r\nconst mapStateToProps = () => ({});\r\nconst mapDispatchToProps = { initBoardParams, push };\r\nconst connect = reactConnect(mapStateToProps, mapDispatchToProps);\r\n\r\n\r\nexport default connect(StartPage);","import { getBoard } from '$utils/index';\r\n\r\n\r\nexport const getBoardTiles  = state => state.game.getIn(['tiles']);\r\nexport const getStartTime   = state => state.game.getIn(['gameParams', 'start']);\r\nexport const getMoves       = state => state.game.getIn(['gameParams', 'moves']);\r\nexport const getGameStatus  = state => state.game.getIn(['gameParams', 'status']);\r\nexport const getBoardRows   = state => getBoard(getBoardTiles(state));\r\nexport const getIsChecked   = (state, index) => getBoardTiles(state).getIn([index, 'isChecked']);\r\nexport const getTileFlagged = (state, index) => getBoardTiles(state).getIn([index, 'isFlagged']);\r\nexport const getTileEmoji   = (state, index) => {\r\n\tconst tile = getBoardTiles(state).getIn([index]);\r\n\r\n\treturn (\r\n\t\ttile.getIn(['isFlagged'])\r\n\t\t\t? (\r\n\t\t\t\ttile.getIn(['isMine']) && (state.game.getIn(['gameParams', 'status']) === 0)\r\n\t\t\t\t\t? 'bomb'\r\n\t\t\t\t\t: 'flag'\r\n\t\t\t)\r\n\t\t\t: (\r\n\t\t\t\ttile.getIn(['isMine'])\r\n\t\t\t\t\t? (\r\n\t\t\t\t\t\tstate.game.getIn(['gameParams', 'status']) !== 0\r\n\t\t\t\t\t\t\t? 'notChecked'\r\n\t\t\t\t\t\t\t: (\r\n\t\t\t\t\t\t\t\tstate.game.getIn(['gameParams', 'bangIndex']) === index\r\n\t\t\t\t\t\t\t\t\t? 'bang'\r\n\t\t\t\t\t\t\t\t\t: 'bomb'\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t)\r\n\t\t\t\t\t: (\r\n\t\t\t\t\t\ttile.getIn(['isChecked'])\r\n\t\t\t\t\t\t\t? `num_${state.game.getIn(['tiles', index, 'minesCount'])}`\r\n\t\t\t\t\t\t\t: 'notChecked'\r\n\t\t\t\t\t)\r\n\t\t\t)\r\n\t);\r\n};\r\nexport const getMinesLeft = state => {\r\n\tconst total = state.params.mines;\r\n\tconst checked = getBoardTiles(state).reduce(\r\n\t\t(minesChecked, tile) => (\r\n\t\t\ttile.getIn(['isFlagged'])\r\n\t\t\t\t? minesChecked + 1\r\n\t\t\t\t: minesChecked\r\n\t\t),\r\n\t\t0\r\n\t);\r\n\r\n\treturn total - checked;\r\n};\r\n\r\n/*\r\nconst getGameStatus = state => {\r\n\tconst status = state.game.get('boardTiles').reduce(\r\n\t\t(tempStatus, tile) => (\r\n\t\t\ttile.get('isMine')\r\n\t\t\t\t? {\r\n\t\t\t\t\t  isWin: tempStatus.isWin,\r\n\t\t\t\t\tisLoose: tempStatus.isWin && tile.get('isChecked')\r\n\t\t\t\t}\r\n\t\t\t\t: {\r\n\t\t\t\t\t  isWin: tempStatus.isWin && tile.get('isChecked'),\r\n\t\t\t\t\tisLoose: tempStatus.isWin\r\n\t\t\t\t}\r\n\t\t),\r\n\t\t{\r\n\t\t\tisWin: true,\r\n\t\t\tisLoose: true\r\n\t\t}\r\n\t);\r\n\r\n\tswitch(status) {\r\n\t\tcase ( status.isWin && !status.isLoose): return 'win';\r\n\t\tcase (!status.isWin &&  status.isLoose): return 'lose';\r\n\t\tcase (!status.isWin && !status.isLoose): return 'playing';\r\n\t\tdefault:                                 return 'notStart';\r\n\t}\r\n};\r\n*/","import { connect as reactConnect } from 'react-redux';\r\nimport { getGameStatus } from '$store/selectors/stateAsParam';\r\nimport Header from '$comp/game_page/header/Header';\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n\tstatus: getGameStatus(state)\r\n});\r\nconst mapDispatchToProps = {};\r\nconst connect = reactConnect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default connect(Header);","import React from 'react';\r\n\r\nimport emoji from '$const/emoji';\r\nimport Emoji from '$cont/total/Emoji';\r\n\r\nimport '$assets/styles/game_page/header/Header.css';\r\n\r\n\r\nexport default ({ status }) => {\r\n\tconst styles = {};\r\n\tif (status === 0) {\r\n\t\tstyles.color = '#f00';\r\n\t}\r\n\tif (status === 1) {\r\n\t\tstyles.color = '#383';\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"header\">\r\n\t\t\t<Emoji styles={15} type={status} />\r\n\t\t\t<span className=\"title\" style={styles}>{emoji[status].name}</span>\r\n\t\t</div>\r\n\t)\r\n};","import { connect as reactConnect } from 'react-redux';\r\nimport { getTileEmoji, getTileFlagged, getGameStatus, getIsChecked } from '$store/selectors/stateAsParam';\r\nimport { flagToggle, checkTile } from '$store/actions/dispatchers';\r\nimport Tile from '$comp/game_page/board/Tile';\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n\t         index: ownProps.index,\r\n\t          type: getTileEmoji(state, ownProps.index),\r\n\t  isNotFlagged: !getTileFlagged(state, ownProps.index),\r\n\tisGameContinue: getGameStatus(state) === -1,\r\n\t     isChecked: getIsChecked(state, ownProps.index)\r\n});\r\nconst mapDispatchToProps = { flagToggle, checkTile };\r\nconst connect = reactConnect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default connect(Tile);","import React from 'react';\r\n\r\nimport Emoji from '$cont/total/Emoji';\r\n\r\nimport '$assets/styles/game_page/board/Tile.css';\r\n\r\n\r\nexport default ({\r\n\tindex,\r\n\ttype,\r\n\tisNotFlagged,\r\n\tisGameContinue,\r\n\tisChecked,\r\n\tflagToggle,\r\n\tcheckTile\r\n}) => {\r\n\tconst styles = {};\r\n\tif (isChecked || !isGameContinue) {\r\n\t\tstyles.width = '50px';\r\n\t\tstyles.height = '50px';\r\n\t\tstyles.borderWidth = '2px';\r\n\t\tstyles.cursor = 'default';\r\n\t}\r\n\tif (isChecked) {\r\n\t\tstyles.backgroundColor = '#0078d7';\r\n\t}\r\n\r\n\tconst handleLeftClick = () => {\r\n\t\tif (isGameContinue && isNotFlagged) {\r\n\t\t\tcheckTile(index);\r\n\t\t}\r\n\t};\r\n\tconst handleRightClick = e => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (isGameContinue) {\r\n\t\t\tflagToggle(index);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName=\"tile\"\r\n\t\t\tonClick={handleLeftClick}\r\n\t\t\tonContextMenu={handleRightClick}\r\n\t\t\tstyle={styles}\r\n\t\t>\r\n\t\t\t<Emoji size={26} type={type} />\r\n\t\t</div>\r\n\t)\r\n};","import { connect as reactConnect } from 'react-redux';\r\nimport { getBoardRows } from '$store/selectors/stateAsParam';\r\nimport GameBoard from '$comp/game_page/board/GameBoard';\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n\trows: getBoardRows(state)\r\n});\r\nconst mapDispatchToProps = {};\r\nconst connect = reactConnect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default connect(GameBoard);","import React from 'react';\r\n\r\nimport Tile from '$cont/game_page/board/Tile';\r\n\r\nimport '$assets/styles/game_page/board/GameBoard.css';\r\n\r\n\r\nexport default ({ rows }) => {\r\n\treturn (\r\n\t\t<div className=\"gameBoard\">\r\n\t\t{\r\n\t\t\trows.map(\r\n\t\t\t\t(row, index) => (\r\n\t\t\t\t\t<div key={index} className=\"row\">\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trow.map(\r\n\t\t\t\t\t\t\tboardCell => (\r\n\t\t\t\t\t\t\t\t<Tile\r\n\t\t\t\t\t\t\t\t\tkey={boardCell.tilesIndex}\r\n\t\t\t\t\t\t\t\t\tindex={boardCell.tilesIndex}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t\t}\r\n\t\t</div>\r\n\t)\r\n}","import { connect as reactConnect } from 'react-redux';\r\nimport { getMinesLeft } from '$store/selectors/stateAsParam';\r\nimport MinesLeft from '$comp/game_page/footer/FlagsLeft';\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n\tminesLeft: getMinesLeft(state)\r\n});\r\nconst mapDispatchToProps = {};\r\nconst connect = reactConnect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default connect(MinesLeft);","import React from 'react';\r\n\r\nimport '$assets/styles/game_page/footer/MinesLeft.css';\r\n\r\n\r\nexport default ({ minesLeft }) => (\r\n\t<div className=\"minesLeft\">\r\n\t\t<span className=\"number\">{minesLeft}</span>\r\n\t\t<span className=\"text\">flags left</span>\r\n\t</div>\r\n);","import { connect as reactConnect } from 'react-redux';\r\nimport { getMoves } from '$store/selectors/stateAsParam';\r\nimport MovesCount from '$comp/game_page/footer/MovesCount';\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n\tmoves: getMoves(state)\r\n});\r\nconst mapDispatchToProps = {};\r\nconst connect = reactConnect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default connect(MovesCount);","import React from 'react';\r\n\r\nimport '$assets/styles/game_page/footer/MovesCount.css';\r\n\r\n\r\nexport default ({ moves }) => (\r\n\t<div className=\"movesCount\">\r\n\t\t<span className=\"number\">{moves}</span>\r\n\t\t<span className=\"text\">moves</span>\r\n\t</div>\r\n);","import React, { Component } from 'react';\r\n\r\nimport '$assets/styles/game_page/footer/GameTimer.css';\r\n\r\n\r\nexport default class GameTimer extends Component {\r\n\tupdateTimer = () => {\r\n\t\tif (!this.timer) {\r\n\t\t\tthis.timer = setInterval(\r\n\t\t\t\t() => {\r\n\t\t\t\t\tif (this.props.isGameContinue) {\r\n\t\t\t\t\t\tthis.forceUpdate()\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tclearInterval(this.timer);\r\n\t\t\t\t\t\tdelete this.timer;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t500\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.updateTimer();\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tclearInterval(this.timer);\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps, prevState, snapshot) {\r\n\t\tthis.updateTimer();\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst currentTime = Math.round(\r\n\t\t\t(Date.now() - this.props.startTime) / 1000\r\n\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"timer\">\r\n\t\t\t\t<span className=\"number\">{currentTime}</span>\r\n\t\t\t\t<span className=\"text\">seconds passed</span>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}","import { connect as reactConnect } from 'react-redux';\r\nimport { getGameStatus, getStartTime } from '$store/selectors/stateAsParam';\r\nimport GameTimer from '$comp/game_page/footer/GameTimer';\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n\t     startTime: getStartTime(state),\r\n\tisGameContinue: getGameStatus(state) === -1\r\n});\r\nconst mapDispatchToProps = {};\r\nconst connect = reactConnect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default connect(GameTimer);","import Footer from '$comp/game_page/footer/Footer';\r\n\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nimport FlagsLeft from '$cont/game_page/footer/FlagsLeft';\r\nimport MovesCount from '$cont/game_page/footer/MovesCount';\r\nimport GameTimer from '$cont/game_page/footer/GameTimer';\r\n\r\nimport '$assets/styles/game_page/footer/Footer.css';\r\n\r\n\r\nexport default () => (\r\n\t<div className=\"footer\">\r\n\t\t<FlagsLeft />\r\n\t\t<MovesCount />\r\n\t\t<GameTimer />\r\n\t</div>\r\n);","import React, { Component } from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport Header from '$cont/game_page/header/Header';\r\nimport GameBoard from '$cont/game_page/board/GameBoard';\r\nimport Footer from '$cont/game_page/footer/Footer';\r\n\r\nimport '$assets/styles/game_page/GamePage.css';\r\n\r\n\r\nexport default class GamePage extends Component {\r\n\thandleRestart = () => {\r\n\t\tthis.props.startGame();\r\n\t};\r\n\thandleNewParams = () => {\r\n\t\tthis.props.push('/');\r\n\t};\r\n\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.props.startGame();\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"gamePage\">\r\n\t\t\t\t<div className=\"rules\">Mark mines and open other tiles</div>\r\n\t\t\t\t<div className=\"game\">\r\n\t\t\t\t\t<Header />\r\n\t\t\t\t\t<GameBoard />\r\n\t\t\t\t\t<Footer />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"controls\">\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tclassName=\"restartBtn\"\r\n\t\t\t\t\t\tonClick={this.handleRestart}\r\n\t\t\t\t\t>Restart</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tclassName=\"newParamsBtn\"\r\n\t\t\t\t\t\tonClick={this.handleNewParams}\r\n\t\t\t\t\t>New params</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}","import { connect as reactConnect } from 'react-redux';\r\nimport { startGame, push } from '$store/actions/dispatchers';\r\nimport GamePage from '$comp/game_page/GamePage';\r\n\r\n\r\nconst mapStateToProps = () => ({});\r\nconst mapDispatchToProps = { startGame, push };\r\nconst connect = reactConnect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default connect(GamePage);","import { Route, Redirect } from 'react-router-dom';\r\n\r\nimport Start from '$cont/start_page/StartPage';\r\nimport Game from '$cont/game_page/GamePage';\r\n\r\n\r\nconst appRoutes = () => {\r\n\tconst main = [\r\n\t\t{\r\n\t\t\t   action: Route,\r\n\t\t\t     path: '/',\r\n\t\t\tcomponent: Start,\r\n\t\t\t    exact: true\r\n\t\t},\r\n\t\t{\r\n\t\t\t   action: Route,\r\n\t\t\t     path: '/game',\r\n\t\t\tcomponent: Game,\r\n\t\t\t    exact: true\r\n\t\t}\r\n\t];\r\n\tconst support = [\r\n\t\t{\r\n\t\t\taction: Redirect,\r\n\t\t\t  from: '/',\r\n\t\t\t    to: '/',\r\n\t\t\t exact: false\r\n\t\t}\r\n\t];\r\n\r\n\treturn main.concat(support);\r\n};\r\n\r\n\r\nexport default appRoutes;","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n\r\nexport default createMuiTheme({\r\n\ttypography: {\r\n\t\tuseNextVariants: true,\r\n\t}\r\n});","import React from 'react';\nimport { render } from 'react-dom';\nimport App from './app/blocks/AppMain.js';\nimport '$assets/styles/index.css';\n\n\nconst app = <App />;\nconst root = document.getElementById('root');\n\nrender(app, root);","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { ConnectedRouter } from 'connected-react-router';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\nimport { history } from '$store/storage/helpers';\r\nimport store from '$store/storage/index';\r\nimport Routes from '$routes/index';\r\nimport appRoutes from '$routes/appRoutes';\r\nimport theme from '$assets/themes/MainTheme';\r\n\r\n\r\nexport default () => (\r\n\t<Provider store={store}>\r\n\t\t<ConnectedRouter history={history}>\r\n\t\t\t<MuiThemeProvider theme={theme}>\r\n\t\t\t\t<Routes getUrls={appRoutes} />\r\n\t\t\t</MuiThemeProvider>\r\n\t\t</ConnectedRouter>\r\n\t</Provider>\r\n);"],"sourceRoot":""}